{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol-ext/interaction/DrawHole.js"],
  "sourcesContent": ["/*\tCopyright (c) 2017 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\n\nimport ol_geom_Polygon from 'ol/geom/Polygon.js';\nimport ol_geom_MultiPolygon from 'ol/geom/MultiPolygon.js';\nimport ol_geom_LinearRing from 'ol/geom/LinearRing.js';\nimport ol_interaction_Draw from 'ol/interaction/Draw.js';\nimport ol_interaction_Select from 'ol/interaction/Select.js';\n\n/** Interaction to draw holes in a polygon.\r\n * It fires a drawstart, drawend event when drawing the hole\r\n * and a modifystart, modifyend event before and after inserting the hole in the feature geometry.\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires drawstart\r\n * @fires drawend\r\n * @fires modifystart\r\n * @fires modifyend\r\n * @param {olx.interaction.DrawHoleOptions} options extend olx.interaction.DrawOptions\r\n * \t@param {Array<ol.layer.Vector> | function | undefined} options.layers A list of layers from which polygons should be selected. Alternatively, a filter function can be provided. default: all visible layers\r\n * \t@param {Array<ol.Feature> | ol.Collection<ol.Feature> | function | undefined} options.featureFilter An array or a collection of features the interaction applies on or a function that takes a feature and a layer and returns true if the feature is a candidate\r\n * \t@param { ol.style.Style | Array<ol.style.Style> | StyleFunction | undefined }\tStyle for the selected features, default: default edit style\r\n * \t@param {function | undefined}\toptions.geometryFunction Draw interaction geometry function to customize the hole\r\n */\nvar ol_interaction_DrawHole = class olinteractionDrawHole extends ol_interaction_Draw {\n  constructor(options) {\n    options = options || {};\n    // Geometry function that test points inside the current selection\n    var _geometryFn = function (coordinates, geometry) {\n      var coord = coordinates[0].pop();\n      if (!this.getPolygon() || this.getPolygon().intersectsCoordinate(coord)) {\n        this.lastOKCoord = [coord[0], coord[1]];\n      }\n      coordinates[0].push([this.lastOKCoord[0], this.lastOKCoord[1]]);\n      if (geometry) {\n        geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n      } else {\n        geometry = new ol_geom_Polygon(coordinates);\n      }\n      return geometry;\n    };\n    var geomFn = options.geometryFunction;\n    if (geomFn) {\n      options.geometryFunction = function (c, g, p) {\n        g = _geometryFn.bind(this)(c, g);\n        return geomFn.bind(this)(c, g, p);\n      };\n    } else {\n      options.geometryFunction = _geometryFn;\n    }\n\n    // Create draw interaction\n    options.type = 'Polygon';\n    super(options);\n\n    // Select interaction for the current feature\n    this._select = new ol_interaction_Select({\n      style: options.style\n    });\n    this._select.setActive(false);\n\n    // Layer filter function\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        this.layers_ = options.layers;\n      } else if (options.layers.indexOf) {\n        this.layers_ = function (l) {\n          return options.layers.indexOf(l) >= 0;\n        };\n      }\n    }\n\n    // Features to apply on \n    if (typeof options.featureFilter === 'function') {\n      this._features = options.featureFilter;\n    } else if (options.featureFilter) {\n      var features = options.featureFilter;\n      this._features = function (f) {\n        if (features.indexOf) {\n          return !!features[features.indexOf(f)];\n        } else {\n          return !!features.item(features.getArray().indexOf(f));\n        }\n      };\n    } else {\n      this._features = function () {\n        return true;\n      };\n    }\n\n    // Start drawing if inside a feature\n    this.on('drawstart', this._startDrawing.bind(this));\n    // End drawing add the hole to the current Polygon\n    this.on('drawend', this._finishDrawing.bind(this));\n  }\n\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {ol.Map} map Map.\r\n   * @api stable\r\n   */\n  setMap(map) {\n    // Remove previous selection\n    if (this.getMap()) this.getMap().removeInteraction(this._select);\n    // Add new one\n    if (map) map.addInteraction(this._select);\n    super.setMap.call(this, map);\n  }\n  /**\r\n   * Activate/deactivate the interaction\r\n   * @param {boolean}\r\n   * @api stable\r\n   */\n  setActive(b) {\n    if (this._select) this._select.getFeatures().clear();\n    super.setActive.call(this, b);\n  }\n  /**\r\n   * Remove last point of the feature currently being drawn\r\n   * (test if points to remove before).\r\n   */\n  removeLastPoint() {\n    if (this._feature && this._feature.getGeometry().getCoordinates()[0].length > 2) {\n      super.removeLastPoint.call(this);\n    }\n  }\n  /**\r\n   * Get the current polygon to hole\r\n   * @return {ol.Feature}\r\n   */\n  getPolygon() {\n    return this._polygon;\n    // return this._select.getFeatures().item(0).getGeometry();\n  }\n  /**\r\n   * Get current feature to add a hole and start drawing\r\n   * @param {ol_interaction_Draw.Event} e\r\n   * @private\r\n   */\n  _startDrawing(e) {\n    var map = this.getMap();\n    this._feature = e.feature;\n    var coord = e.feature.getGeometry().getCoordinates()[0][0];\n    this._current = null;\n    // Check object under the pointer\n    map.forEachFeatureAtPixel(map.getPixelFromCoordinate(coord), function (feature, layer) {\n      // Not yet found?\n      if (!this._current && this._features(feature, layer)) {\n        var poly = feature.getGeometry();\n        if (poly.getType() === \"Polygon\" && poly.intersectsCoordinate(coord)) {\n          this._polygonIndex = false;\n          this._polygon = poly;\n          this._current = feature;\n        } else if (poly.getType() === \"MultiPolygon\" && poly.intersectsCoordinate(coord)) {\n          for (var i = 0, p; p = poly.getPolygon(i); i++) {\n            if (p.intersectsCoordinate(coord)) {\n              this._polygonIndex = i;\n              this._polygon = p;\n              this._current = feature;\n              break;\n            }\n          }\n        }\n      }\n    }.bind(this), {\n      layerFilter: this.layers_\n    });\n    this._select.getFeatures().clear();\n    if (!this._current) {\n      this.setActive(false);\n      this.setActive(true);\n    } else {\n      this._select.getFeatures().push(this._current);\n    }\n  }\n  /**\r\n   * Stop drawing and add the sketch feature to the target feature.\r\n   * @param {ol_interaction_Draw.Event} e\r\n   * @private\r\n   */\n  _finishDrawing(e) {\n    // The feature is the hole\n    e.hole = e.feature;\n    // Get the current feature\n    e.feature = this._select.getFeatures().item(0);\n    this.dispatchEvent({\n      type: 'modifystart',\n      features: [this._current]\n    });\n    // Create the hole\n    var c = e.hole.getGeometry().getCoordinates()[0];\n    if (c.length > 3) {\n      if (this._polygonIndex !== false) {\n        var geom = e.feature.getGeometry();\n        var newGeom = new ol_geom_MultiPolygon([]);\n        for (var i = 0, pi; pi = geom.getPolygon(i); i++) {\n          if (i === this._polygonIndex) {\n            pi.appendLinearRing(new ol_geom_LinearRing(c));\n            newGeom.appendPolygon(pi);\n          } else {\n            newGeom.appendPolygon(pi);\n          }\n        }\n        e.feature.setGeometry(newGeom);\n      } else {\n        this.getPolygon().appendLinearRing(new ol_geom_LinearRing(c));\n      }\n    }\n    this.dispatchEvent({\n      type: 'modifyend',\n      features: [this._current]\n    });\n    // reset\n    this._feature = null;\n    this._select.getFeatures().clear();\n  }\n  /**\r\n   * Function that is called when a geometry's coordinates are updated.\r\n   * @param {Array<ol.coordinate>} coordinates\r\n   * @param {ol_geom_Polygon} geometry\r\n   * @return {ol_geom_Polygon}\r\n   * @private\r\n   */\n  _geometryFn(coordinates, geometry) {\n    var coord = coordinates[0].pop();\n    if (!this.getPolygon() || this.getPolygon().intersectsCoordinate(coord)) {\n      this.lastOKCoord = [coord[0], coord[1]];\n    }\n    coordinates[0].push([this.lastOKCoord[0], this.lastOKCoord[1]]);\n    if (geometry) {\n      geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n    } else {\n      geometry = new ol_geom_Polygon(coordinates);\n    }\n    return geometry;\n  }\n};\nexport default ol_interaction_DrawHole;"],
  "mappings": "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",
  "names": []
}
