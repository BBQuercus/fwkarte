{
  "version": 3,
  "sources": ["../../../../../../../../node_modules/ol/format/OWS.js", "../../../../../../../../node_modules/ol/format/WMTSCapabilities.js"],
  "sourcesContent": ["/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\nimport { readHref } from './xlink.js';\nimport { readString } from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({\n    'name': name\n  }, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({\n    'href': href\n  }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */objectStack[objectStack.length - 1];\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\nexport default OWS;", "/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport { boundingExtent } from '../extent.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\nimport { readDecimal, readPositiveInteger, readString } from './xsd.js';\nimport { readHref } from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents)\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertyPusher(readStyle),\n  'Format': makeObjectPropertyPusher(readString),\n  'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n  'Dimension': makeObjectPropertyPusher(readDimensions),\n  'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Default': makeObjectPropertySetter(readString),\n  'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'WellKnownScaleSet': makeObjectPropertySetter(readString),\n  'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'SupportedCRS': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString),\n  'BoundingBox': makeObjectPropertySetter(readBoundingBox)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n  'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n  'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n  'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MatrixHeight': makeObjectPropertySetter(readPositiveInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {\n    extent: boundingExtent(coordinates),\n    crs: crs\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;"],
  "mappings": "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",
  "names": ["NAMESPACE_URIS", "PARSERS"]
}
