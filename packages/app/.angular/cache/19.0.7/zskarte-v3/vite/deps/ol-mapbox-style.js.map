{
  "version": 3,
  "sources": ["../../../../../../node_modules/ol-mapbox-style/dist/index.js"],
  "sourcesContent": ["import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { toPromise } from 'ol/functions.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport TileState from 'ol/TileState.js';\nimport { VectorTile } from 'ol';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { get as get$1, getUserProjection, getPointResolution, fromLonLat, equivalent } from 'ol/proj.js';\nimport { getCenter, getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nvar csscolorparser = {};\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'rebeccapurple': [102, 51, 153, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\nfunction clamp_css_byte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i);\n  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n  // int or percentage.\n  if (str[str.length - 1] === '%') return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n  // float or percentage.\n  if (str[str.length - 1] === '%') return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;else if (h > 1) h -= 1;\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  return m1;\n}\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();\n  // dup.\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);\n      // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 4095)) return null;\n      // Covers NaN.\n      return [(iv & 3840) >> 4 | (iv & 3840) >> 8, iv & 240 | (iv & 240) >> 4, iv & 15 | (iv & 15) << 4, 1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);\n      // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 16777215)) return null;\n      // Covers NaN.\n      return [(iv & 16711680) >> 16, (iv & 65280) >> 8, iv & 255, 1];\n    }\n    return null;\n  }\n  var op = str.indexOf('('),\n    ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1;\n    // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n      // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]), parse_css_int(params[1]), parse_css_int(params[2]), alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n      // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n        // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255), clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255), clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255), alpha];\n      default:\n        return null;\n    }\n  }\n  return null;\n}\ntry {\n  parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n  constructor(r, g, b, a = 1) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n  /**\n   * Parses valid CSS color strings and returns a `Color` instance.\n   * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n   */\n  static parse(input) {\n    if (!input) {\n      return undefined;\n    }\n    if (input instanceof Color) {\n      return input;\n    }\n    if (typeof input !== 'string') {\n      return undefined;\n    }\n    const rgba = parseCSSColor_1(input);\n    if (!rgba) {\n      return undefined;\n    }\n    return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n  }\n  /**\n   * Returns an RGBA string representing the color value.\n   *\n   * @returns An RGBA string.\n   * @example\n   * var purple = new Color.parse('purple');\n   * purple.toString; // = \"rgba(128,0,128,1)\"\n   * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n   * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n   */\n  toString() {\n    const [r, g, b, a] = this.toArray();\n    return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n  }\n  /**\n   * Returns an RGBA array of values representing the color, unpremultiplied by A.\n   *\n   * @returns An array of RGBA color values in the range [0, 255].\n   */\n  toArray() {\n    const {\n      r,\n      g,\n      b,\n      a\n    } = this;\n    return a === 0 ? [0, 0, 0, 0] : [r * 255 / a, g * 255 / a, b * 255 / a, a];\n  }\n  /**\n   * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n   *\n   * @returns An array of RGBA color values in the range [0, 1].\n   */\n  toArray01() {\n    const {\n      r,\n      g,\n      b,\n      a\n    } = this;\n    return a === 0 ? [0, 0, 0, 0] : [r / a, g / a, b / a, a];\n  }\n  /**\n   * Returns an RGBA array of values representing the color, premultiplied by A.\n   *\n   * @returns An array of RGBA color values in the range [0, 1].\n   */\n  toArray01PremultipliedAlpha() {\n    const {\n      r,\n      g,\n      b,\n      a\n    } = this;\n    return [r, g, b, a];\n  }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\nfunction convertLiteral(value) {\n  return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n  let stops = parameters.stops;\n  if (!stops) {\n    // identity function\n    return convertIdentityFunction(parameters, propertySpec);\n  }\n  const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n  const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n  const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n  stops = stops.map(stop => {\n    if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n      return [stop[0], convertTokenString(stop[1])];\n    }\n    return [stop[0], convertLiteral(stop[1])];\n  });\n  if (zoomAndFeatureDependent) {\n    return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n  } else if (zoomDependent) {\n    return convertZoomFunction(parameters, propertySpec, stops);\n  } else {\n    return convertPropertyFunction(parameters, propertySpec, stops);\n  }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n  const get = ['get', parameters.property];\n  if (parameters.default === undefined) {\n    // By default, expressions for string-valued properties get coerced. To preserve\n    // legacy function semantics, insert an explicit assertion instead.\n    return propertySpec.type === 'string' ? ['string', get] : get;\n  } else if (propertySpec.type === 'enum') {\n    return ['match', get, Object.keys(propertySpec.values), get, parameters.default];\n  } else {\n    const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n    if (propertySpec.type === 'array') {\n      expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n    }\n    return expression;\n  }\n}\nfunction getInterpolateOperator(parameters) {\n  switch (parameters.colorSpace) {\n    case 'hcl':\n      return 'interpolate-hcl';\n    case 'lab':\n      return 'interpolate-lab';\n    default:\n      return 'interpolate';\n  }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n  const featureFunctionParameters = {};\n  const featureFunctionStops = {};\n  const zoomStops = [];\n  for (let s = 0; s < stops.length; s++) {\n    const stop = stops[s];\n    const zoom = stop[0].zoom;\n    if (featureFunctionParameters[zoom] === undefined) {\n      featureFunctionParameters[zoom] = {\n        zoom,\n        type: parameters.type,\n        property: parameters.property,\n        default: parameters.default\n      };\n      featureFunctionStops[zoom] = [];\n      zoomStops.push(zoom);\n    }\n    featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n  }\n  // the interpolation type for the zoom dimension of a zoom-and-property\n  // function is determined directly from the style property specification\n  // for which it's being used: linear for interpolatable properties, step\n  // otherwise.\n  const functionType = getFunctionType({}, propertySpec);\n  if (functionType === 'exponential') {\n    const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n    for (const z of zoomStops) {\n      const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n      appendStopPair(expression, z, output, false);\n    }\n    return expression;\n  } else {\n    const expression = ['step', ['zoom']];\n    for (const z of zoomStops) {\n      const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n      appendStopPair(expression, z, output, true);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n  }\n}\nfunction coalesce(a, b) {\n  if (a !== undefined) return a;\n  if (b !== undefined) return b;\n}\nfunction getFallback(parameters, propertySpec) {\n  const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n  /*\n   * Some fields with type: resolvedImage have an undefined default.\n   * Because undefined is an invalid value for resolvedImage, set fallback to\n   * an empty string instead of undefined to ensure output\n   * passes validation.\n   */\n  if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n    return '';\n  }\n  return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n  const type = getFunctionType(parameters, propertySpec);\n  const get = ['get', parameters.property];\n  if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n    const expression = ['case'];\n    for (const stop of stops) {\n      expression.push(['==', get, stop[0]], stop[1]);\n    }\n    expression.push(getFallback(parameters, propertySpec));\n    return expression;\n  } else if (type === 'categorical') {\n    const expression = ['match', get];\n    for (const stop of stops) {\n      appendStopPair(expression, stop[0], stop[1], false);\n    }\n    expression.push(getFallback(parameters, propertySpec));\n    return expression;\n  } else if (type === 'interval') {\n    const expression = ['step', ['number', get]];\n    for (const stop of stops) {\n      appendStopPair(expression, stop[0], stop[1], true);\n    }\n    fixupDegenerateStepCurve(expression);\n    return parameters.default === undefined ? expression : ['case', ['==', ['typeof', get], 'number'], expression, convertLiteral(parameters.default)];\n  } else if (type === 'exponential') {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    const expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], ['number', get]];\n    for (const stop of stops) {\n      appendStopPair(expression, stop[0], stop[1], false);\n    }\n    return parameters.default === undefined ? expression : ['case', ['==', ['typeof', get], 'number'], expression, convertLiteral(parameters.default)];\n  } else {\n    throw new Error(`Unknown property function type ${type}`);\n  }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n  const type = getFunctionType(parameters, propertySpec);\n  let expression;\n  let isStep = false;\n  if (type === 'interval') {\n    expression = ['step', input];\n    isStep = true;\n  } else if (type === 'exponential') {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n  } else {\n    throw new Error(`Unknown zoom function type \"${type}\"`);\n  }\n  for (const stop of stops) {\n    appendStopPair(expression, stop[0], stop[1], isStep);\n  }\n  fixupDegenerateStepCurve(expression);\n  return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n  // degenerate step curve (i.e. a constant function): add a noop stop\n  if (expression[0] === 'step' && expression.length === 3) {\n    expression.push(0);\n    expression.push(expression[3]);\n  }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n  // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n  // https://github.com/mapbox/mapbox-gl-js/issues/4107\n  if (curve.length > 3 && input === curve[curve.length - 2]) {\n    return;\n  }\n  // step curves don't get the first input value, as it is redundant.\n  if (!(isStep && curve.length === 2)) {\n    curve.push(input);\n  }\n  curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n  if (parameters.type) {\n    return parameters.type;\n  } else {\n    return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n  }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n  const result = ['concat'];\n  const re = /{([^{}]+)}/g;\n  let pos = 0;\n  for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n    const literal = s.slice(pos, re.lastIndex - match[0].length);\n    pos = re.lastIndex;\n    if (literal.length > 0) result.push(literal);\n    result.push(['get', match[1]]);\n  }\n  if (result.length === 1) {\n    return s;\n  }\n  if (pos < s.length) {\n    result.push(s.slice(pos));\n  } else if (result.length === 2) {\n    return ['to-string', result[1]];\n  }\n  return result;\n}\n\n//      \nclass ParsingError extends Error {\n  constructor(key, message) {\n    super(message);\n    this.message = message;\n    this.key = key;\n  }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n  constructor(parent, bindings = []) {\n    this.parent = parent;\n    this.bindings = {};\n    for (const [name, expression] of bindings) {\n      this.bindings[name] = expression;\n    }\n  }\n  concat(bindings) {\n    return new Scope(this, bindings);\n  }\n  get(name) {\n    if (this.bindings[name]) {\n      return this.bindings[name];\n    }\n    if (this.parent) {\n      return this.parent.get(name);\n    }\n    throw new Error(`${name} not found in scope.`);\n  }\n  has(name) {\n    if (this.bindings[name]) return true;\n    return this.parent ? this.parent.has(name) : false;\n  }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = {\n  kind: 'null'\n};\nconst NumberType = {\n  kind: 'number'\n};\nconst StringType = {\n  kind: 'string'\n};\nconst BooleanType = {\n  kind: 'boolean'\n};\nconst ColorType = {\n  kind: 'color'\n};\nconst ObjectType = {\n  kind: 'object'\n};\nconst ValueType = {\n  kind: 'value'\n};\nconst ErrorType = {\n  kind: 'error'\n};\nconst CollatorType = {\n  kind: 'collator'\n};\nconst FormattedType = {\n  kind: 'formatted'\n};\nconst ResolvedImageType = {\n  kind: 'resolvedImage'\n};\nfunction array$1(itemType, N) {\n  return {\n    kind: 'array',\n    itemType,\n    N\n  };\n}\nfunction toString$1(type) {\n  if (type.kind === 'array') {\n    const itemType = toString$1(type.itemType);\n    return typeof type.N === 'number' ? `array<${itemType}, ${type.N}>` : type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n  } else {\n    return type.kind;\n  }\n}\nconst valueMemberTypes = [NullType, NumberType, StringType, BooleanType, ColorType, FormattedType, ObjectType, array$1(ValueType), ResolvedImageType];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n  if (t.kind === 'error') {\n    // Error is a subtype of every type\n    return null;\n  } else if (expected.kind === 'array') {\n    if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n      return null;\n    }\n  } else if (expected.kind === t.kind) {\n    return null;\n  } else if (expected.kind === 'value') {\n    for (const memberType of valueMemberTypes) {\n      if (!checkSubtype(memberType, t)) {\n        return null;\n      }\n    }\n  }\n  return `Expected ${toString$1(expected)} but found ${toString$1(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n  return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n  return allowedTypes.some(t => {\n    if (t === 'null') {\n      return provided === null;\n    } else if (t === 'array') {\n      return Array.isArray(provided);\n    } else if (t === 'object') {\n      return provided && !Array.isArray(provided) && typeof provided === 'object';\n    } else {\n      return t === typeof provided;\n    }\n  });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n  constructor(caseSensitive, diacriticSensitive, locale) {\n    if (caseSensitive) this.sensitivity = diacriticSensitive ? 'variant' : 'case';else this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n    this.locale = locale;\n    this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n      sensitivity: this.sensitivity,\n      usage: 'search'\n    });\n  }\n  compare(lhs, rhs) {\n    return this.collator.compare(lhs, rhs);\n  }\n  resolvedLocale() {\n    // We create a Collator without \"usage: search\" because we don't want\n    // the search options encoded in our result (e.g. \"en-u-co-search\")\n    return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n  }\n}\n\n//      \nclass FormattedSection {\n  constructor(text, image, scale, fontStack, textColor) {\n    // combine characters so that diacritic marks are not separate code points\n    this.text = text.normalize ? text.normalize() : text;\n    this.image = image;\n    this.scale = scale;\n    this.fontStack = fontStack;\n    this.textColor = textColor;\n  }\n}\nclass Formatted {\n  constructor(sections) {\n    this.sections = sections;\n  }\n  static fromString(unformatted) {\n    return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n  }\n  isEmpty() {\n    if (this.sections.length === 0) return true;\n    return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n  }\n  static factory(text) {\n    if (text instanceof Formatted) {\n      return text;\n    } else {\n      return Formatted.fromString(text);\n    }\n  }\n  toString() {\n    if (this.sections.length === 0) return '';\n    return this.sections.map(section => section.text).join('');\n  }\n  serialize() {\n    const serialized = ['format'];\n    for (const section of this.sections) {\n      if (section.image) {\n        serialized.push(['image', section.image.name]);\n        continue;\n      }\n      serialized.push(section.text);\n      const options = {};\n      if (section.fontStack) {\n        options['text-font'] = ['literal', section.fontStack.split(',')];\n      }\n      if (section.scale) {\n        options['font-scale'] = section.scale;\n      }\n      if (section.textColor) {\n        options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n      }\n      serialized.push(options);\n    }\n    return serialized;\n  }\n}\n\n//      \nclass ResolvedImage {\n  constructor(options) {\n    this.name = options.name;\n    this.available = options.available;\n  }\n  toString() {\n    return this.name;\n  }\n  static fromString(name) {\n    if (!name) return null;\n    // treat empty values as no image\n    return new ResolvedImage({\n      name,\n      available: false\n    });\n  }\n  serialize() {\n    return ['image', this.name];\n  }\n}\nfunction validateRGBA(r, g, b, a) {\n  if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n    const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n    return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n  }\n  if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n    return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n  }\n  return null;\n}\nfunction isValue(mixed) {\n  if (mixed === null) {\n    return true;\n  } else if (typeof mixed === 'string') {\n    return true;\n  } else if (typeof mixed === 'boolean') {\n    return true;\n  } else if (typeof mixed === 'number') {\n    return true;\n  } else if (mixed instanceof Color$1) {\n    return true;\n  } else if (mixed instanceof Collator) {\n    return true;\n  } else if (mixed instanceof Formatted) {\n    return true;\n  } else if (mixed instanceof ResolvedImage) {\n    return true;\n  } else if (Array.isArray(mixed)) {\n    for (const item of mixed) {\n      if (!isValue(item)) {\n        return false;\n      }\n    }\n    return true;\n  } else if (typeof mixed === 'object') {\n    for (const key in mixed) {\n      if (!isValue(mixed[key])) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction typeOf(value) {\n  if (value === null) {\n    return NullType;\n  } else if (typeof value === 'string') {\n    return StringType;\n  } else if (typeof value === 'boolean') {\n    return BooleanType;\n  } else if (typeof value === 'number') {\n    return NumberType;\n  } else if (value instanceof Color$1) {\n    return ColorType;\n  } else if (value instanceof Collator) {\n    return CollatorType;\n  } else if (value instanceof Formatted) {\n    return FormattedType;\n  } else if (value instanceof ResolvedImage) {\n    return ResolvedImageType;\n  } else if (Array.isArray(value)) {\n    const length = value.length;\n    let itemType;\n    for (const item of value) {\n      const t = typeOf(item);\n      if (!itemType) {\n        itemType = t;\n      } else if (itemType === t) {\n        continue;\n      } else {\n        itemType = ValueType;\n        break;\n      }\n    }\n    return array$1(itemType || ValueType, length);\n  } else {\n    return ObjectType;\n  }\n}\nfunction toString(value) {\n  const type = typeof value;\n  if (value === null) {\n    return '';\n  } else if (type === 'string' || type === 'number' || type === 'boolean') {\n    return String(value);\n  } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n    return value.toString();\n  } else {\n    return JSON.stringify(value);\n  }\n}\nclass Literal {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  static parse(args, context) {\n    if (args.length !== 2) return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n    if (!isValue(args[1])) return context.error(`invalid value`);\n    const value = args[1];\n    let type = typeOf(value);\n    // special case: infer the item type if possible for zero-length arrays\n    const expected = context.expectedType;\n    if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n      type = expected;\n    }\n    return new Literal(type, value);\n  }\n  evaluate() {\n    return this.value;\n  }\n  eachChild() {}\n  outputDefined() {\n    return true;\n  }\n  serialize() {\n    if (this.type.kind === 'array' || this.type.kind === 'object') {\n      return ['literal', this.value];\n    } else if (this.value instanceof Color$1) {\n      // Constant-folding can generate Literal expressions that you\n      // couldn't actually generate with a \"literal\" expression,\n      // so we have to implement an equivalent serialization here\n      return ['rgba'].concat(this.value.toArray());\n    } else if (this.value instanceof Formatted) {\n      // Same as Color\n      return this.value.serialize();\n    } else {\n      return this.value;\n    }\n  }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n  constructor(message) {\n    this.name = 'ExpressionEvaluationError';\n    this.message = message;\n  }\n  toJSON() {\n    return this.message;\n  }\n}\nvar RuntimeError$1 = RuntimeError;\nconst types$2 = {\n  string: StringType,\n  number: NumberType,\n  boolean: BooleanType,\n  object: ObjectType\n};\nclass Assertion {\n  constructor(type, args) {\n    this.type = type;\n    this.args = args;\n  }\n  static parse(args, context) {\n    if (args.length < 2) return context.error(`Expected at least one argument.`);\n    let i = 1;\n    let type;\n    const name = args[0];\n    if (name === 'array') {\n      let itemType;\n      if (args.length > 2) {\n        const type = args[1];\n        if (typeof type !== 'string' || !(type in types$2) || type === 'object') return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n        itemType = types$2[type];\n        i++;\n      } else {\n        itemType = ValueType;\n      }\n      let N;\n      if (args.length > 3) {\n        if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n          return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n        }\n        N = args[2];\n        i++;\n      }\n      type = array$1(itemType, N);\n    } else {\n      type = types$2[name];\n    }\n    const parsed = [];\n    for (; i < args.length; i++) {\n      const input = context.parse(args[i], i, ValueType);\n      if (!input) return null;\n      parsed.push(input);\n    }\n    return new Assertion(type, parsed);\n  }\n  evaluate(ctx) {\n    for (let i = 0; i < this.args.length; i++) {\n      const value = this.args[i].evaluate(ctx);\n      const error = checkSubtype(this.type, typeOf(value));\n      if (!error) {\n        return value;\n      } else if (i === this.args.length - 1) {\n        throw new RuntimeError$1(`Expected value to be of type ${toString$1(this.type)}, but found ${toString$1(typeOf(value))} instead.`);\n      }\n    }\n    return null;\n  }\n  eachChild(fn) {\n    this.args.forEach(fn);\n  }\n  outputDefined() {\n    return this.args.every(arg => arg.outputDefined());\n  }\n  serialize() {\n    const type = this.type;\n    const serialized = [type.kind];\n    if (type.kind === 'array') {\n      const itemType = type.itemType;\n      if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n        serialized.push(itemType.kind);\n        const N = type.N;\n        if (typeof N === 'number' || this.args.length > 1) {\n          serialized.push(N);\n        }\n      }\n    }\n    return serialized.concat(this.args.map(arg => arg.serialize()));\n  }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n  constructor(sections) {\n    this.type = FormattedType;\n    this.sections = sections;\n  }\n  static parse(args, context) {\n    if (args.length < 2) {\n      return context.error(`Expected at least one argument.`);\n    }\n    const firstArg = args[1];\n    if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n      return context.error(`First argument must be an image or text section.`);\n    }\n    const sections = [];\n    let nextTokenMayBeObject = false;\n    for (let i = 1; i <= args.length - 1; ++i) {\n      const arg = args[i];\n      if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n        nextTokenMayBeObject = false;\n        let scale = null;\n        if (arg['font-scale']) {\n          scale = context.parse(arg['font-scale'], 1, NumberType);\n          if (!scale) return null;\n        }\n        let font = null;\n        if (arg['text-font']) {\n          font = context.parse(arg['text-font'], 1, array$1(StringType));\n          if (!font) return null;\n        }\n        let textColor = null;\n        if (arg['text-color']) {\n          textColor = context.parse(arg['text-color'], 1, ColorType);\n          if (!textColor) return null;\n        }\n        const lastExpression = sections[sections.length - 1];\n        lastExpression.scale = scale;\n        lastExpression.font = font;\n        lastExpression.textColor = textColor;\n      } else {\n        const content = context.parse(args[i], 1, ValueType);\n        if (!content) return null;\n        const kind = content.type.kind;\n        if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage') return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n        nextTokenMayBeObject = true;\n        sections.push({\n          content,\n          scale: null,\n          font: null,\n          textColor: null\n        });\n      }\n    }\n    return new FormatExpression(sections);\n  }\n  evaluate(ctx) {\n    const evaluateSection = section => {\n      const evaluatedContent = section.content.evaluate(ctx);\n      if (typeOf(evaluatedContent) === ResolvedImageType) {\n        return new FormattedSection('', evaluatedContent, null, null, null);\n      }\n      return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n    };\n    return new Formatted(this.sections.map(evaluateSection));\n  }\n  eachChild(fn) {\n    for (const section of this.sections) {\n      fn(section.content);\n      if (section.scale) {\n        fn(section.scale);\n      }\n      if (section.font) {\n        fn(section.font);\n      }\n      if (section.textColor) {\n        fn(section.textColor);\n      }\n    }\n  }\n  outputDefined() {\n    // Technically the combinatoric set of all children\n    // Usually, this.text will be undefined anyway\n    return false;\n  }\n  serialize() {\n    const serialized = ['format'];\n    for (const section of this.sections) {\n      serialized.push(section.content.serialize());\n      const options = {};\n      if (section.scale) {\n        options['font-scale'] = section.scale.serialize();\n      }\n      if (section.font) {\n        options['text-font'] = section.font.serialize();\n      }\n      if (section.textColor) {\n        options['text-color'] = section.textColor.serialize();\n      }\n      serialized.push(options);\n    }\n    return serialized;\n  }\n}\n\n//      \nclass ImageExpression {\n  constructor(input) {\n    this.type = ResolvedImageType;\n    this.input = input;\n  }\n  static parse(args, context) {\n    if (args.length !== 2) {\n      return context.error(`Expected two arguments.`);\n    }\n    const name = context.parse(args[1], 1, StringType);\n    if (!name) return context.error(`No image name provided.`);\n    return new ImageExpression(name);\n  }\n  evaluate(ctx) {\n    const evaluatedImageName = this.input.evaluate(ctx);\n    const value = ResolvedImage.fromString(evaluatedImageName);\n    if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n    return value;\n  }\n  eachChild(fn) {\n    fn(this.input);\n  }\n  outputDefined() {\n    // The output of image is determined by the list of available images in the evaluation context\n    return false;\n  }\n  serialize() {\n    return ['image', this.input.serialize()];\n  }\n}\nconst types$1 = {\n  'to-boolean': BooleanType,\n  'to-color': ColorType,\n  'to-number': NumberType,\n  'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n  constructor(type, args) {\n    this.type = type;\n    this.args = args;\n  }\n  static parse(args, context) {\n    if (args.length < 2) return context.error(`Expected at least one argument.`);\n    const name = args[0];\n    if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2) return context.error(`Expected one argument.`);\n    const type = types$1[name];\n    const parsed = [];\n    for (let i = 1; i < args.length; i++) {\n      const input = context.parse(args[i], i, ValueType);\n      if (!input) return null;\n      parsed.push(input);\n    }\n    return new Coercion(type, parsed);\n  }\n  evaluate(ctx) {\n    if (this.type.kind === 'boolean') {\n      return Boolean(this.args[0].evaluate(ctx));\n    } else if (this.type.kind === 'color') {\n      let input;\n      let error;\n      for (const arg of this.args) {\n        input = arg.evaluate(ctx);\n        error = null;\n        if (input instanceof Color$1) {\n          return input;\n        } else if (typeof input === 'string') {\n          const c = ctx.parseColor(input);\n          if (c) return c;\n        } else if (Array.isArray(input)) {\n          if (input.length < 3 || input.length > 4) {\n            error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n          } else {\n            error = validateRGBA(input[0], input[1], input[2], input[3]);\n          }\n          if (!error) {\n            return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n          }\n        }\n      }\n      throw new RuntimeError$1(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n    } else if (this.type.kind === 'number') {\n      let value = null;\n      for (const arg of this.args) {\n        value = arg.evaluate(ctx);\n        if (value === null) return 0;\n        const num = Number(value);\n        if (isNaN(num)) continue;\n        return num;\n      }\n      throw new RuntimeError$1(`Could not convert ${JSON.stringify(value)} to number.`);\n    } else if (this.type.kind === 'formatted') {\n      // There is no explicit 'to-formatted' but this coercion can be implicitly\n      // created by properties that expect the 'formatted' type.\n      return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n    } else if (this.type.kind === 'resolvedImage') {\n      return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n    } else {\n      return toString(this.args[0].evaluate(ctx));\n    }\n  }\n  eachChild(fn) {\n    this.args.forEach(fn);\n  }\n  outputDefined() {\n    return this.args.every(arg => arg.outputDefined());\n  }\n  serialize() {\n    if (this.type.kind === 'formatted') {\n      return new FormatExpression([{\n        content: this.args[0],\n        scale: null,\n        font: null,\n        textColor: null\n      }]).serialize();\n    }\n    if (this.type.kind === 'resolvedImage') {\n      return new ImageExpression(this.args[0]).serialize();\n    }\n    const serialized = [`to-${this.type.kind}`];\n    this.eachChild(child => {\n      serialized.push(child.serialize());\n    });\n    return serialized;\n  }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n  constructor() {\n    this.globals = null;\n    this.feature = null;\n    this.featureState = null;\n    this.formattedSection = null;\n    this._parseColorCache = {};\n    this.availableImages = null;\n    this.canonical = null;\n    this.featureTileCoord = null;\n    this.featureDistanceData = null;\n  }\n  id() {\n    return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n  }\n  geometryType() {\n    return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n  }\n  geometry() {\n    return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n  }\n  canonicalID() {\n    return this.canonical;\n  }\n  properties() {\n    return this.feature && this.feature.properties || {};\n  }\n  distanceFromCenter() {\n    if (this.featureTileCoord && this.featureDistanceData) {\n      const c = this.featureDistanceData.center;\n      const scale = this.featureDistanceData.scale;\n      const {\n        x,\n        y\n      } = this.featureTileCoord;\n      // Calculate the distance vector `d` (left handed)\n      const dX = x * scale - c[0];\n      const dY = y * scale - c[1];\n      // The bearing vector `b` (left handed)\n      const bX = this.featureDistanceData.bearing[0];\n      const bY = this.featureDistanceData.bearing[1];\n      // Distance is calculated as `dot(d, v)`\n      const dist = bX * dX + bY * dY;\n      return dist;\n    }\n    return 0;\n  }\n  parseColor(input) {\n    let cached = this._parseColorCache[input];\n    if (!cached) {\n      cached = this._parseColorCache[input] = Color$1.parse(input);\n    }\n    return cached;\n  }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n  constructor(name, type, evaluate, args) {\n    this.name = name;\n    this.type = type;\n    this._evaluate = evaluate;\n    this.args = args;\n  }\n  evaluate(ctx) {\n    return this._evaluate(ctx, this.args);\n  }\n  eachChild(fn) {\n    this.args.forEach(fn);\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    return [this.name].concat(this.args.map(arg => arg.serialize()));\n  }\n  static parse(args, context) {\n    const op = args[0];\n    const definition = CompoundExpression.definitions[op];\n    if (!definition) {\n      return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n    }\n    // Now check argument types against each signature\n    const type = Array.isArray(definition) ? definition[0] : definition.type;\n    const availableOverloads = Array.isArray(definition) ? [[definition[1], definition[2]]] : definition.overloads;\n    const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) ||\n    // varags\n    signature.length === args.length - 1 // correct param count\n    );\n    let signatureContext = null;\n    for (const [params, evaluate] of overloads) {\n      // Use a fresh context for each attempted signature so that, if\n      // we eventually succeed, we haven't polluted `context.errors`.\n      signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n      // First parse all the args, potentially coercing to the\n      // types expected by this overload.\n      const parsedArgs = [];\n      let argParseFailed = false;\n      for (let i = 1; i < args.length; i++) {\n        const arg = args[i];\n        const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n        const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n        if (!parsed) {\n          argParseFailed = true;\n          break;\n        }\n        parsedArgs.push(parsed);\n      }\n      if (argParseFailed) {\n        // Couldn't coerce args of this overload to expected type, move\n        // on to next one.\n        continue;\n      }\n      if (Array.isArray(params)) {\n        if (params.length !== parsedArgs.length) {\n          signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n          continue;\n        }\n      }\n      for (let i = 0; i < parsedArgs.length; i++) {\n        const expected = Array.isArray(params) ? params[i] : params.type;\n        const arg = parsedArgs[i];\n        signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n      }\n      if (signatureContext.errors.length === 0) {\n        return new CompoundExpression(op, type, evaluate, parsedArgs);\n      }\n    }\n    if (overloads.length === 1) {\n      context.errors.push(...signatureContext.errors);\n    } else {\n      const expected = overloads.length ? overloads : availableOverloads;\n      const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n      const actualTypes = [];\n      // For error message, re-parse arguments without trying to\n      // apply any coercions\n      for (let i = 1; i < args.length; i++) {\n        const parsed = context.parse(args[i], 1 + actualTypes.length);\n        if (!parsed) return null;\n        actualTypes.push(toString$1(parsed.type));\n      }\n      context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n    }\n    return null;\n  }\n  static register(registry, definitions) {\n    CompoundExpression.definitions = definitions;\n    for (const name in definitions) {\n      registry[name] = CompoundExpression;\n    }\n  }\n}\nfunction stringifySignature(signature) {\n  if (Array.isArray(signature)) {\n    return `(${signature.map(toString$1).join(', ')})`;\n  } else {\n    return `(${toString$1(signature.type)}...)`;\n  }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n  constructor(caseSensitive, diacriticSensitive, locale) {\n    this.type = CollatorType;\n    this.locale = locale;\n    this.caseSensitive = caseSensitive;\n    this.diacriticSensitive = diacriticSensitive;\n  }\n  static parse(args, context) {\n    if (args.length !== 2) return context.error(`Expected one argument.`);\n    const options = args[1];\n    if (typeof options !== 'object' || Array.isArray(options)) return context.error(`Collator options argument must be an object.`);\n    const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n    if (!caseSensitive) return null;\n    const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n    if (!diacriticSensitive) return null;\n    let locale = null;\n    if (options['locale']) {\n      locale = context.parse(options['locale'], 1, StringType);\n      if (!locale) return null;\n    }\n    return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n  }\n  evaluate(ctx) {\n    return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n  }\n  eachChild(fn) {\n    fn(this.caseSensitive);\n    fn(this.diacriticSensitive);\n    if (this.locale) {\n      fn(this.locale);\n    }\n  }\n  outputDefined() {\n    // Technically the set of possible outputs is the combinatoric set of Collators produced\n    // by all possible outputs of locale/caseSensitive/diacriticSensitive\n    // But for the primary use of Collators in comparison operators, we ignore the Collator's\n    // possible outputs anyway, so we can get away with leaving this false for now.\n    return false;\n  }\n  serialize() {\n    const options = {};\n    options['case-sensitive'] = this.caseSensitive.serialize();\n    options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n    if (this.locale) {\n      options['locale'] = this.locale.serialize();\n    }\n    return ['collator', options];\n  }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n  bbox[0] = Math.min(bbox[0], coord[0]);\n  bbox[1] = Math.min(bbox[1], coord[1]);\n  bbox[2] = Math.max(bbox[2], coord[0]);\n  bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n  return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n  return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n  if (bbox1[0] <= bbox2[0]) return false;\n  if (bbox1[2] >= bbox2[2]) return false;\n  if (bbox1[1] <= bbox2[1]) return false;\n  if (bbox1[3] >= bbox2[3]) return false;\n  return true;\n}\nfunction getTileCoordinates(p, canonical) {\n  const x = mercatorXfromLng(p[0]);\n  const y = mercatorYfromLat(p[1]);\n  const tilesAtZoom = Math.pow(2, canonical.z);\n  return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction onBoundary(p, p1, p2) {\n  const x1 = p[0] - p1[0];\n  const y1 = p[1] - p1[1];\n  const x2 = p[0] - p2[0];\n  const y2 = p[1] - p2[1];\n  return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n  return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n  let inside = false;\n  for (let i = 0, len = rings.length; i < len; i++) {\n    const ring = rings[i];\n    for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n      if (onBoundary(point, ring[j], ring[j + 1])) return false;\n      if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n    }\n  }\n  return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n  for (let i = 0; i < polygons.length; i++) {\n    if (pointWithinPolygon(point, polygons[i])) return true;\n  }\n  return false;\n}\nfunction perp(v1, v2) {\n  return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n  // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n  const x1 = p1[0] - q1[0];\n  const y1 = p1[1] - q1[1];\n  const x2 = p2[0] - q1[0];\n  const y2 = p2[1] - q1[1];\n  const x3 = q2[0] - q1[0];\n  const y3 = q2[1] - q1[1];\n  const det1 = x1 * y3 - x3 * y1;\n  const det2 = x2 * y3 - x3 * y2;\n  if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0) return true;\n  return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n  // check if two segments are parallel or not\n  // precondition is end point a, b is inside polygon, if line a->b is\n  // parallel to polygon edge c->d, then a->b won't intersect with c->d\n  const vectorP = [b[0] - a[0], b[1] - a[1]];\n  const vectorQ = [d[0] - c[0], d[1] - c[1]];\n  if (perp(vectorQ, vectorP) === 0) return false;\n  // If lines are intersecting with each other, the relative location should be:\n  // a and b lie in different sides of segment c->d\n  // c and d lie in different sides of segment a->b\n  if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n  return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n  for (const ring of polygon) {\n    // loop through every edge of the ring\n    for (let j = 0; j < ring.length - 1; ++j) {\n      if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n  // First, check if geometry points of line segments are all inside polygon\n  for (let i = 0; i < line.length; ++i) {\n    if (!pointWithinPolygon(line[i], polygon)) {\n      return false;\n    }\n  }\n  // Second, check if there is line segment intersecting polygon edge\n  for (let i = 0; i < line.length - 1; ++i) {\n    if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n  for (let i = 0; i < polygons.length; i++) {\n    if (lineStringWithinPolygon(line, polygons[i])) return true;\n  }\n  return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n  const polygon = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    const ring = [];\n    for (let j = 0; j < coordinates[i].length; j++) {\n      const coord = getTileCoordinates(coordinates[i][j], canonical);\n      updateBBox(bbox, coord);\n      ring.push(coord);\n    }\n    polygon.push(ring);\n  }\n  return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n  const polygons = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n    polygons.push(polygon);\n  }\n  return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n  if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n    const halfWorldSize = worldSize * 0.5;\n    let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n    if (shift === 0) {\n      shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n    }\n    p[0] += shift;\n  }\n  updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n  bbox[0] = bbox[1] = Infinity;\n  bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n  const worldSize = Math.pow(2, canonical.z) * EXTENT;\n  const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n  const tilePoints = [];\n  if (!geometry) return tilePoints;\n  for (const points of geometry) {\n    for (const point of points) {\n      const p = [point.x + shifts[0], point.y + shifts[1]];\n      updatePoint(p, pointBBox, polyBBox, worldSize);\n      tilePoints.push(p);\n    }\n  }\n  return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n  const worldSize = Math.pow(2, canonical.z) * EXTENT;\n  const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n  const tileLines = [];\n  if (!geometry) return tileLines;\n  for (const line of geometry) {\n    const tileLine = [];\n    for (const point of line) {\n      const p = [point.x + shifts[0], point.y + shifts[1]];\n      updateBBox(lineBBox, p);\n      tileLine.push(p);\n    }\n    tileLines.push(tileLine);\n  }\n  if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n    resetBBox(lineBBox);\n    for (const line of tileLines) {\n      for (const p of line) {\n        updatePoint(p, lineBBox, polyBBox, worldSize);\n      }\n    }\n  }\n  return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n  const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n  const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n  const canonical = ctx.canonicalID();\n  if (!canonical) {\n    return false;\n  }\n  if (polygonGeometry.type === 'Polygon') {\n    const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n    const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n    if (!boxWithinBox(pointBBox, polyBBox)) return false;\n    for (const point of tilePoints) {\n      if (!pointWithinPolygon(point, tilePolygon)) return false;\n    }\n  }\n  if (polygonGeometry.type === 'MultiPolygon') {\n    const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n    const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n    if (!boxWithinBox(pointBBox, polyBBox)) return false;\n    for (const point of tilePoints) {\n      if (!pointWithinPolygons(point, tilePolygons)) return false;\n    }\n  }\n  return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n  const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n  const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n  const canonical = ctx.canonicalID();\n  if (!canonical) {\n    return false;\n  }\n  if (polygonGeometry.type === 'Polygon') {\n    const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n    const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n    if (!boxWithinBox(lineBBox, polyBBox)) return false;\n    for (const line of tileLines) {\n      if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n    }\n  }\n  if (polygonGeometry.type === 'MultiPolygon') {\n    const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n    const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n    if (!boxWithinBox(lineBBox, polyBBox)) return false;\n    for (const line of tileLines) {\n      if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n    }\n  }\n  return true;\n}\nclass Within {\n  constructor(geojson, geometries) {\n    this.type = BooleanType;\n    this.geojson = geojson;\n    this.geometries = geometries;\n  }\n  static parse(args, context) {\n    if (args.length !== 2) return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n    if (isValue(args[1])) {\n      const geojson = args[1];\n      if (geojson.type === 'FeatureCollection') {\n        for (let i = 0; i < geojson.features.length; ++i) {\n          const type = geojson.features[i].geometry.type;\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return new Within(geojson, geojson.features[i].geometry);\n          }\n        }\n      } else if (geojson.type === 'Feature') {\n        const type = geojson.geometry.type;\n        if (type === 'Polygon' || type === 'MultiPolygon') {\n          return new Within(geojson, geojson.geometry);\n        }\n      } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n        return new Within(geojson, geojson);\n      }\n    }\n    return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n  }\n  evaluate(ctx) {\n    if (ctx.geometry() != null && ctx.canonicalID() != null) {\n      if (ctx.geometryType() === 'Point') {\n        return pointsWithinPolygons(ctx, this.geometries);\n      } else if (ctx.geometryType() === 'LineString') {\n        return linesWithinPolygons(ctx, this.geometries);\n      }\n    }\n    return false;\n  }\n  eachChild() {}\n  outputDefined() {\n    return true;\n  }\n  serialize() {\n    return ['within', this.geojson];\n  }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n  if (e instanceof CompoundExpression$1) {\n    if (e.name === 'get' && e.args.length === 1) {\n      return false;\n    } else if (e.name === 'feature-state') {\n      return false;\n    } else if (e.name === 'has' && e.args.length === 1) {\n      return false;\n    } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n      return false;\n    } else if (/^filter-/.test(e.name)) {\n      return false;\n    }\n  }\n  if (e instanceof Within$1) {\n    return false;\n  }\n  let result = true;\n  e.eachChild(arg => {\n    if (result && !isFeatureConstant(arg)) {\n      result = false;\n    }\n  });\n  return result;\n}\nfunction isStateConstant(e) {\n  if (e instanceof CompoundExpression$1) {\n    if (e.name === 'feature-state') {\n      return false;\n    }\n  }\n  let result = true;\n  e.eachChild(arg => {\n    if (result && !isStateConstant(arg)) {\n      result = false;\n    }\n  });\n  return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n  if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n    return false;\n  }\n  let result = true;\n  e.eachChild(arg => {\n    if (result && !isGlobalPropertyConstant(arg, properties)) {\n      result = false;\n    }\n  });\n  return result;\n}\n\n//      \nclass Var {\n  constructor(name, boundExpression) {\n    this.type = boundExpression.type;\n    this.name = name;\n    this.boundExpression = boundExpression;\n  }\n  static parse(args, context) {\n    if (args.length !== 2 || typeof args[1] !== 'string') return context.error(`'var' expression requires exactly one string literal argument.`);\n    const name = args[1];\n    if (!context.scope.has(name)) {\n      return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n    }\n    return new Var(name, context.scope.get(name));\n  }\n  evaluate(ctx) {\n    return this.boundExpression.evaluate(ctx);\n  }\n  eachChild() {}\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    return ['var', this.name];\n  }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n  // The expected type of this expression. Provided only to allow Expression\n  // implementations to infer argument types: Expression#parse() need not\n  // check that the output type of the parsed expression matches\n  // `expectedType`.\n  constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n    this.registry = registry;\n    this.path = path;\n    this.key = path.map(part => `[${part}]`).join('');\n    this.scope = scope;\n    this.errors = errors;\n    this.expectedType = expectedType;\n  }\n  /**\n   * @param expr the JSON expression to parse\n   * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n   * @param options\n   * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n   * @private\n   */\n  parse(expr, index, expectedType, bindings, options = {}) {\n    if (index) {\n      return this.concat(index, expectedType, bindings)._parse(expr, options);\n    }\n    return this._parse(expr, options);\n  }\n  _parse(expr, options) {\n    if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n      expr = ['literal', expr];\n    }\n    function annotate(parsed, type, typeAnnotation) {\n      if (typeAnnotation === 'assert') {\n        return new Assertion$1(type, [parsed]);\n      } else if (typeAnnotation === 'coerce') {\n        return new Coercion$1(type, [parsed]);\n      } else {\n        return parsed;\n      }\n    }\n    if (Array.isArray(expr)) {\n      if (expr.length === 0) {\n        return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n      }\n      const op = expr[0];\n      if (typeof op !== 'string') {\n        this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        return null;\n      }\n      const Expr = this.registry[op];\n      if (Expr) {\n        let parsed = Expr.parse(expr, this);\n        if (!parsed) return null;\n        if (this.expectedType) {\n          const expected = this.expectedType;\n          const actual = parsed.type;\n          // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n          // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n          // Otherwise, we do static type-checking.\n          //\n          // These behaviors are overridable for:\n          //   * The \"coalesce\" operator, which needs to omit type annotations.\n          //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n          //\n          if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n            parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n          } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n            parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n          } else if (this.checkSubtype(expected, actual)) {\n            return null;\n          }\n        }\n        // If an expression's arguments are all literals, we can evaluate\n        // it immediately and replace it with a literal value in the\n        // parsed/compiled result. Expressions that expect an image should\n        // not be resolved here so we can later get the available images.\n        if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n          const ec = new EvaluationContext$1();\n          try {\n            parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n          } catch (e) {\n            this.error(e.message);\n            return null;\n          }\n        }\n        return parsed;\n      }\n      return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n    } else if (typeof expr === 'undefined') {\n      return this.error(`'undefined' value invalid. Use null instead.`);\n    } else if (typeof expr === 'object') {\n      return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n    } else {\n      return this.error(`Expected an array, but found ${typeof expr} instead.`);\n    }\n  }\n  /**\n   * Returns a copy of this context suitable for parsing the subexpression at\n   * index `index`, optionally appending to 'let' binding map.\n   *\n   * Note that `errors` property, intended for collecting errors while\n   * parsing, is copied by reference rather than cloned.\n   * @private\n   */\n  concat(index, expectedType, bindings) {\n    const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n    const scope = bindings ? this.scope.concat(bindings) : this.scope;\n    return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n  }\n  /**\n   * Push a parsing (or type checking) error into the `this.errors`\n   * @param error The message\n   * @param keys Optionally specify the source of the error at a child\n   * of the current expression at `this.key`.\n   * @private\n   */\n  error(error, ...keys) {\n    const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n    this.errors.push(new ParsingError$1(key, error));\n  }\n  /**\n   * Returns null if `t` is a subtype of `expected`; otherwise returns an\n   * error message and also pushes it to `this.errors`.\n   */\n  checkSubtype(expected, t) {\n    const error = checkSubtype(expected, t);\n    if (error) this.error(error);\n    return error;\n  }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n  if (expression instanceof Var$1) {\n    return isConstant(expression.boundExpression);\n  } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n    return false;\n  } else if (expression instanceof CollatorExpression) {\n    // Although the results of a Collator expression with fixed arguments\n    // generally shouldn't change between executions, we can't serialize them\n    // as constant expressions because results change based on environment.\n    return false;\n  } else if (expression instanceof Within$1) {\n    return false;\n  }\n  const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n  let childrenConstant = true;\n  expression.eachChild(child => {\n    // We can _almost_ assume that if `expressions` children are constant,\n    // they would already have been evaluated to Literal values when they\n    // were parsed.  Type annotations are the exception, because they might\n    // have been inferred and added after a child was parsed.\n    // So we recurse into isConstant() for the children of type annotations,\n    // but otherwise simply check whether they are Literals.\n    if (isTypeAnnotation) {\n      childrenConstant = childrenConstant && isConstant(child);\n    } else {\n      childrenConstant = childrenConstant && child instanceof Literal$1;\n    }\n  });\n  if (!childrenConstant) {\n    return false;\n  }\n  return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n  const lastIndex = stops.length - 1;\n  let lowerIndex = 0;\n  let upperIndex = lastIndex;\n  let currentIndex = 0;\n  let currentValue, nextValue;\n  while (lowerIndex <= upperIndex) {\n    currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n    currentValue = stops[currentIndex];\n    nextValue = stops[currentIndex + 1];\n    if (currentValue <= input) {\n      if (currentIndex === lastIndex || input < nextValue) {\n        // Search complete\n        return currentIndex;\n      }\n      lowerIndex = currentIndex + 1;\n    } else if (currentValue > input) {\n      upperIndex = currentIndex - 1;\n    } else {\n      throw new RuntimeError$1('Input is not a number.');\n    }\n  }\n  return 0;\n}\n\n//      \nclass Step {\n  constructor(type, input, stops) {\n    this.type = type;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (const [label, expression] of stops) {\n      this.labels.push(label);\n      this.outputs.push(expression);\n    }\n  }\n  static parse(args, context) {\n    if (args.length - 1 < 4) {\n      return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n    }\n    if ((args.length - 1) % 2 !== 0) {\n      return context.error(`Expected an even number of arguments.`);\n    }\n    const input = context.parse(args[1], 1, NumberType);\n    if (!input) return null;\n    const stops = [];\n    let outputType = null;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n      outputType = context.expectedType;\n    }\n    for (let i = 1; i < args.length; i += 2) {\n      const label = i === 1 ? -Infinity : args[i];\n      const value = args[i + 1];\n      const labelKey = i;\n      const valueKey = i + 1;\n      if (typeof label !== 'number') {\n        return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n      }\n      if (stops.length && stops[stops.length - 1][0] >= label) {\n        return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n      }\n      const parsed = context.parse(value, valueKey, outputType);\n      if (!parsed) return null;\n      outputType = outputType || parsed.type;\n      stops.push([label, parsed]);\n    }\n    return new Step(outputType, input, stops);\n  }\n  evaluate(ctx) {\n    const labels = this.labels;\n    const outputs = this.outputs;\n    if (labels.length === 1) {\n      return outputs[0].evaluate(ctx);\n    }\n    const value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n      return outputs[0].evaluate(ctx);\n    }\n    const stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n      return outputs[stopCount - 1].evaluate(ctx);\n    }\n    const index = findStopLessThanOrEqualTo(labels, value);\n    return outputs[index].evaluate(ctx);\n  }\n  eachChild(fn) {\n    fn(this.input);\n    for (const expression of this.outputs) {\n      fn(expression);\n    }\n  }\n  outputDefined() {\n    return this.outputs.every(out => out.outputDefined());\n  }\n  serialize() {\n    const serialized = ['step', this.input.serialize()];\n    for (let i = 0; i < this.labels.length; i++) {\n      if (i > 0) {\n        serialized.push(this.labels[i]);\n      }\n      serialized.push(this.outputs[i].serialize());\n    }\n    return serialized;\n  }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n  // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n  this.cx = 3 * p1x;\n  this.bx = 3 * (p2x - p1x) - this.cx;\n  this.ax = 1 - this.cx - this.bx;\n  this.cy = 3 * p1y;\n  this.by = 3 * (p2y - p1y) - this.cy;\n  this.ay = 1 - this.cy - this.by;\n  this.p1x = p1x;\n  this.p1y = p2y;\n  this.p2x = p2x;\n  this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n  // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n  return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n  return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n  return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n  if (typeof epsilon === 'undefined') epsilon = 0.000001;\n  var t0, t1, t2, x2, i;\n  // First try a few iterations of Newton's method -- normally very fast.\n  for (t2 = x, i = 0; i < 8; i++) {\n    x2 = this.sampleCurveX(t2) - x;\n    if (Math.abs(x2) < epsilon) return t2;\n    var d2 = this.sampleCurveDerivativeX(t2);\n    if (Math.abs(d2) < 0.000001) break;\n    t2 = t2 - x2 / d2;\n  }\n  // Fall back to the bisection method for reliability.\n  t0 = 0;\n  t1 = 1;\n  t2 = x;\n  if (t2 < t0) return t0;\n  if (t2 > t1) return t1;\n  while (t0 < t1) {\n    x2 = this.sampleCurveX(t2);\n    if (Math.abs(x2 - x) < epsilon) return t2;\n    if (x > x2) {\n      t0 = t2;\n    } else {\n      t1 = t2;\n    }\n    t2 = (t1 - t0) * 0.5 + t0;\n  }\n  // Failure.\n  return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n  return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n  return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n  return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n  return from.map((d, i) => {\n    return number(d, to[i], t);\n  });\n}\nvar interpolate = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  number: number,\n  color: color,\n  array: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n  // D65 standard referent\n  Yn = 1,\n  Zn = 1.08883,\n  t0 = 4 / 29,\n  t1 = 6 / 29,\n  t2 = 3 * t1 * t1,\n  t3 = t1 * t1 * t1,\n  deg2rad$1 = Math.PI / 180,\n  rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n  x /= 255;\n  return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n  const b = rgb2xyz(rgbColor.r),\n    a = rgb2xyz(rgbColor.g),\n    l = rgb2xyz(rgbColor.b),\n    x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n    y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn),\n    z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n    alpha: rgbColor.a\n  };\n}\nfunction labToRgb(labColor) {\n  let y = (labColor.l + 16) / 116,\n    x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n    z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n  y = Yn * lab2xyz(y);\n  x = Xn * lab2xyz(x);\n  z = Zn * lab2xyz(z);\n  return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z),\n  // D65 -> sRGB\n  xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n  return {\n    l: number(from.l, to.l, t),\n    a: number(from.a, to.a, t),\n    b: number(from.b, to.b, t),\n    alpha: number(from.alpha, to.alpha, t)\n  };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n  const {\n    l,\n    a,\n    b\n  } = rgbToLab(rgbColor);\n  const h = Math.atan2(b, a) * rad2deg;\n  return {\n    h: h < 0 ? h + 360 : h,\n    c: Math.sqrt(a * a + b * b),\n    l,\n    alpha: rgbColor.a\n  };\n}\nfunction hclToRgb(hclColor) {\n  const h = hclColor.h * deg2rad$1,\n    c = hclColor.c,\n    l = hclColor.l;\n  return labToRgb({\n    l,\n    a: Math.cos(h) * c,\n    b: Math.sin(h) * c,\n    alpha: hclColor.alpha\n  });\n}\nfunction interpolateHue(a, b, t) {\n  const d = b - a;\n  return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n  return {\n    h: interpolateHue(from.h, to.h, t),\n    c: number(from.c, to.c, t),\n    l: number(from.l, to.l, t),\n    alpha: number(from.alpha, to.alpha, t)\n  };\n}\nconst lab = {\n  forward: rgbToLab,\n  reverse: labToRgb,\n  interpolate: interpolateLab\n};\nconst hcl = {\n  forward: rgbToHcl,\n  reverse: hclToRgb,\n  interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n  constructor(type, operator, interpolation, input, stops) {\n    this.type = type;\n    this.operator = operator;\n    this.interpolation = interpolation;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (const [label, expression] of stops) {\n      this.labels.push(label);\n      this.outputs.push(expression);\n    }\n  }\n  static interpolationFactor(interpolation, input, lower, upper) {\n    let t = 0;\n    if (interpolation.name === 'exponential') {\n      t = exponentialInterpolation(input, interpolation.base, lower, upper);\n    } else if (interpolation.name === 'linear') {\n      t = exponentialInterpolation(input, 1, lower, upper);\n    } else if (interpolation.name === 'cubic-bezier') {\n      const c = interpolation.controlPoints;\n      const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n      t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n    }\n    return t;\n  }\n  static parse(args, context) {\n    let [operator, interpolation, input, ...rest] = args;\n    if (!Array.isArray(interpolation) || interpolation.length === 0) {\n      return context.error(`Expected an interpolation type expression.`, 1);\n    }\n    if (interpolation[0] === 'linear') {\n      interpolation = {\n        name: 'linear'\n      };\n    } else if (interpolation[0] === 'exponential') {\n      const base = interpolation[1];\n      if (typeof base !== 'number') return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n      interpolation = {\n        name: 'exponential',\n        base\n      };\n    } else if (interpolation[0] === 'cubic-bezier') {\n      const controlPoints = interpolation.slice(1);\n      if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n        return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n      }\n      interpolation = {\n        name: 'cubic-bezier',\n        controlPoints: controlPoints\n      };\n    } else {\n      return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n    }\n    if (args.length - 1 < 4) {\n      return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n    }\n    if ((args.length - 1) % 2 !== 0) {\n      return context.error(`Expected an even number of arguments.`);\n    }\n    input = context.parse(input, 2, NumberType);\n    if (!input) return null;\n    const stops = [];\n    let outputType = null;\n    if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n      outputType = ColorType;\n    } else if (context.expectedType && context.expectedType.kind !== 'value') {\n      outputType = context.expectedType;\n    }\n    for (let i = 0; i < rest.length; i += 2) {\n      const label = rest[i];\n      const value = rest[i + 1];\n      const labelKey = i + 3;\n      const valueKey = i + 4;\n      if (typeof label !== 'number') {\n        return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n      }\n      if (stops.length && stops[stops.length - 1][0] >= label) {\n        return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n      }\n      const parsed = context.parse(value, valueKey, outputType);\n      if (!parsed) return null;\n      outputType = outputType || parsed.type;\n      stops.push([label, parsed]);\n    }\n    if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n      return context.error(`Type ${toString$1(outputType)} is not interpolatable.`);\n    }\n    return new Interpolate(outputType, operator, interpolation, input, stops);\n  }\n  evaluate(ctx) {\n    const labels = this.labels;\n    const outputs = this.outputs;\n    if (labels.length === 1) {\n      return outputs[0].evaluate(ctx);\n    }\n    const value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n      return outputs[0].evaluate(ctx);\n    }\n    const stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n      return outputs[stopCount - 1].evaluate(ctx);\n    }\n    const index = findStopLessThanOrEqualTo(labels, value);\n    const lower = labels[index];\n    const upper = labels[index + 1];\n    const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n    const outputLower = outputs[index].evaluate(ctx);\n    const outputUpper = outputs[index + 1].evaluate(ctx);\n    if (this.operator === 'interpolate') {\n      return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t); // eslint-disable-line import/namespace\n    } else if (this.operator === 'interpolate-hcl') {\n      return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n    } else {\n      return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n    }\n  }\n  eachChild(fn) {\n    fn(this.input);\n    for (const expression of this.outputs) {\n      fn(expression);\n    }\n  }\n  outputDefined() {\n    return this.outputs.every(out => out.outputDefined());\n  }\n  serialize() {\n    let interpolation;\n    if (this.interpolation.name === 'linear') {\n      interpolation = ['linear'];\n    } else if (this.interpolation.name === 'exponential') {\n      if (this.interpolation.base === 1) {\n        interpolation = ['linear'];\n      } else {\n        interpolation = ['exponential', this.interpolation.base];\n      }\n    } else {\n      interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n    }\n    const serialized = [this.operator, interpolation, this.input.serialize()];\n    for (let i = 0; i < this.labels.length; i++) {\n      serialized.push(this.labels[i], this.outputs[i].serialize());\n    }\n    return serialized;\n  }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n  const difference = upperValue - lowerValue;\n  const progress = input - lowerValue;\n  if (difference === 0) {\n    return 0;\n  } else if (base === 1) {\n    return progress / difference;\n  } else {\n    return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n  }\n}\nvar Interpolate$1 = Interpolate;\nclass Coalesce {\n  constructor(type, args) {\n    this.type = type;\n    this.args = args;\n  }\n  static parse(args, context) {\n    if (args.length < 2) {\n      return context.error('Expectected at least one argument.');\n    }\n    let outputType = null;\n    const expectedType = context.expectedType;\n    if (expectedType && expectedType.kind !== 'value') {\n      outputType = expectedType;\n    }\n    const parsedArgs = [];\n    for (const arg of args.slice(1)) {\n      const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {\n        typeAnnotation: 'omit'\n      });\n      if (!parsed) return null;\n      outputType = outputType || parsed.type;\n      parsedArgs.push(parsed);\n    }\n    // Above, we parse arguments without inferred type annotation so that\n    // they don't produce a runtime error for `null` input, which would\n    // preempt the desired null-coalescing behavior.\n    // Thus, if any of our arguments would have needed an annotation, we\n    // need to wrap the enclosing coalesce expression with it instead.\n    const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n    return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n  }\n  evaluate(ctx) {\n    let result = null;\n    let argCount = 0;\n    let firstImage;\n    for (const arg of this.args) {\n      argCount++;\n      result = arg.evaluate(ctx);\n      // we need to keep track of the first requested image in a coalesce statement\n      // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n      if (result && result instanceof ResolvedImage && !result.available) {\n        // set to first image\n        if (!firstImage) {\n          firstImage = result;\n        }\n        result = null;\n        // if we reach the end, return the first image\n        if (argCount === this.args.length) {\n          return firstImage;\n        }\n      }\n      if (result !== null) break;\n    }\n    return result;\n  }\n  eachChild(fn) {\n    this.args.forEach(fn);\n  }\n  outputDefined() {\n    return this.args.every(arg => arg.outputDefined());\n  }\n  serialize() {\n    const serialized = ['coalesce'];\n    this.eachChild(child => {\n      serialized.push(child.serialize());\n    });\n    return serialized;\n  }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n  constructor(bindings, result) {\n    this.type = result.type;\n    this.bindings = [].concat(bindings);\n    this.result = result;\n  }\n  evaluate(ctx) {\n    return this.result.evaluate(ctx);\n  }\n  eachChild(fn) {\n    for (const binding of this.bindings) {\n      fn(binding[1]);\n    }\n    fn(this.result);\n  }\n  static parse(args, context) {\n    if (args.length < 4) return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n    const bindings = [];\n    for (let i = 1; i < args.length - 1; i += 2) {\n      const name = args[i];\n      if (typeof name !== 'string') {\n        return context.error(`Expected string, but found ${typeof name} instead.`, i);\n      }\n      if (/[^a-zA-Z0-9_]/.test(name)) {\n        return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n      }\n      const value = context.parse(args[i + 1], i + 1);\n      if (!value) return null;\n      bindings.push([name, value]);\n    }\n    const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n    if (!result) return null;\n    return new Let(bindings, result);\n  }\n  outputDefined() {\n    return this.result.outputDefined();\n  }\n  serialize() {\n    const serialized = ['let'];\n    for (const [name, expr] of this.bindings) {\n      serialized.push(name, expr.serialize());\n    }\n    serialized.push(this.result.serialize());\n    return serialized;\n  }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n  constructor(type, index, input) {\n    this.type = type;\n    this.index = index;\n    this.input = input;\n  }\n  static parse(args, context) {\n    if (args.length !== 3) return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n    const index = context.parse(args[1], 1, NumberType);\n    const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n    if (!index || !input) return null;\n    const t = input.type;\n    return new At(t.itemType, index, input);\n  }\n  evaluate(ctx) {\n    const index = this.index.evaluate(ctx);\n    const array = this.input.evaluate(ctx);\n    if (index < 0) {\n      throw new RuntimeError$1(`Array index out of bounds: ${index} < 0.`);\n    }\n    if (index >= array.length) {\n      throw new RuntimeError$1(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n    }\n    if (index !== Math.floor(index)) {\n      throw new RuntimeError$1(`Array index must be an integer, but found ${index} instead.`);\n    }\n    return array[index];\n  }\n  eachChild(fn) {\n    fn(this.index);\n    fn(this.input);\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    return ['at', this.index.serialize(), this.input.serialize()];\n  }\n}\nvar At$1 = At;\n\n//      \nclass In {\n  constructor(needle, haystack) {\n    this.type = BooleanType;\n    this.needle = needle;\n    this.haystack = haystack;\n  }\n  static parse(args, context) {\n    if (args.length !== 3) {\n      return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n    }\n    const needle = context.parse(args[1], 1, ValueType);\n    const haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack) return null;\n    if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n      return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString$1(needle.type)} instead`);\n    }\n    return new In(needle, haystack);\n  }\n  evaluate(ctx) {\n    const needle = this.needle.evaluate(ctx);\n    const haystack = this.haystack.evaluate(ctx);\n    if (haystack == null) return false;\n    if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n      throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${toString$1(typeOf(needle))} instead.`);\n    }\n    if (!isValidNativeType(haystack, ['string', 'array'])) {\n      throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${toString$1(typeOf(haystack))} instead.`);\n    }\n    return haystack.indexOf(needle) >= 0;\n  }\n  eachChild(fn) {\n    fn(this.needle);\n    fn(this.haystack);\n  }\n  outputDefined() {\n    return true;\n  }\n  serialize() {\n    return ['in', this.needle.serialize(), this.haystack.serialize()];\n  }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n  constructor(needle, haystack, fromIndex) {\n    this.type = NumberType;\n    this.needle = needle;\n    this.haystack = haystack;\n    this.fromIndex = fromIndex;\n  }\n  static parse(args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n      return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n    }\n    const needle = context.parse(args[1], 1, ValueType);\n    const haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack) return null;\n    if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n      return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString$1(needle.type)} instead`);\n    }\n    if (args.length === 4) {\n      const fromIndex = context.parse(args[3], 3, NumberType);\n      if (!fromIndex) return null;\n      return new IndexOf(needle, haystack, fromIndex);\n    } else {\n      return new IndexOf(needle, haystack);\n    }\n  }\n  evaluate(ctx) {\n    const needle = this.needle.evaluate(ctx);\n    const haystack = this.haystack.evaluate(ctx);\n    if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n      throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${toString$1(typeOf(needle))} instead.`);\n    }\n    if (!isValidNativeType(haystack, ['string', 'array'])) {\n      throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${toString$1(typeOf(haystack))} instead.`);\n    }\n    if (this.fromIndex) {\n      const fromIndex = this.fromIndex.evaluate(ctx);\n      return haystack.indexOf(needle, fromIndex);\n    }\n    return haystack.indexOf(needle);\n  }\n  eachChild(fn) {\n    fn(this.needle);\n    fn(this.haystack);\n    if (this.fromIndex) {\n      fn(this.fromIndex);\n    }\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    if (this.fromIndex != null && this.fromIndex !== undefined) {\n      const fromIndex = this.fromIndex.serialize();\n      return ['index-of', this.needle.serialize(), this.haystack.serialize(), fromIndex];\n    }\n    return ['index-of', this.needle.serialize(), this.haystack.serialize()];\n  }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n  constructor(inputType, outputType, input, cases, outputs, otherwise) {\n    this.inputType = inputType;\n    this.type = outputType;\n    this.input = input;\n    this.cases = cases;\n    this.outputs = outputs;\n    this.otherwise = otherwise;\n  }\n  static parse(args, context) {\n    if (args.length < 5) return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n    if (args.length % 2 !== 1) return context.error(`Expected an even number of arguments.`);\n    let inputType;\n    let outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n      outputType = context.expectedType;\n    }\n    const cases = {};\n    const outputs = [];\n    for (let i = 2; i < args.length - 1; i += 2) {\n      let labels = args[i];\n      const value = args[i + 1];\n      if (!Array.isArray(labels)) {\n        labels = [labels];\n      }\n      const labelContext = context.concat(i);\n      if (labels.length === 0) {\n        return labelContext.error('Expected at least one branch label.');\n      }\n      for (const label of labels) {\n        if (typeof label !== 'number' && typeof label !== 'string') {\n          return labelContext.error(`Branch labels must be numbers or strings.`);\n        } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n          return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n        } else if (typeof label === 'number' && Math.floor(label) !== label) {\n          return labelContext.error(`Numeric branch labels must be integer values.`);\n        } else if (!inputType) {\n          inputType = typeOf(label);\n        } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n          return null;\n        }\n        if (typeof cases[String(label)] !== 'undefined') {\n          return labelContext.error('Branch labels must be unique.');\n        }\n        cases[String(label)] = outputs.length;\n      }\n      const result = context.parse(value, i, outputType);\n      if (!result) return null;\n      outputType = outputType || result.type;\n      outputs.push(result);\n    }\n    const input = context.parse(args[1], 1, ValueType);\n    if (!input) return null;\n    const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise) return null;\n    if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n      return null;\n    }\n    return new Match(inputType, outputType, input, cases, outputs, otherwise);\n  }\n  evaluate(ctx) {\n    const input = this.input.evaluate(ctx);\n    const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n    return output.evaluate(ctx);\n  }\n  eachChild(fn) {\n    fn(this.input);\n    this.outputs.forEach(fn);\n    fn(this.otherwise);\n  }\n  outputDefined() {\n    return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n  }\n  serialize() {\n    const serialized = ['match', this.input.serialize()];\n    // Sort so serialization has an arbitrary defined order, even though\n    // branch order doesn't affect evaluation\n    const sortedLabels = Object.keys(this.cases).sort();\n    // Group branches by unique match expression to support condensed\n    // serializations of the form [case1, case2, ...] -> matchExpression\n    const groupedByOutput = [];\n    const outputLookup = {};\n    // lookup index into groupedByOutput for a given output expression\n    for (const label of sortedLabels) {\n      const outputIndex = outputLookup[this.cases[label]];\n      if (outputIndex === undefined) {\n        // First time seeing this output, add it to the end of the grouped list\n        outputLookup[this.cases[label]] = groupedByOutput.length;\n        groupedByOutput.push([this.cases[label], [label]]);\n      } else {\n        // We've seen this expression before, add the label to that output's group\n        groupedByOutput[outputIndex][1].push(label);\n      }\n    }\n    const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n    for (const [outputIndex, labels] of groupedByOutput) {\n      if (labels.length === 1) {\n        // Only a single label matches this output expression\n        serialized.push(coerceLabel(labels[0]));\n      } else {\n        // Array of literal labels pointing to this output expression\n        serialized.push(labels.map(coerceLabel));\n      }\n      serialized.push(this.outputs[outputIndex].serialize());\n    }\n    serialized.push(this.otherwise.serialize());\n    return serialized;\n  }\n}\nvar Match$1 = Match;\nclass Case {\n  constructor(type, branches, otherwise) {\n    this.type = type;\n    this.branches = branches;\n    this.otherwise = otherwise;\n  }\n  static parse(args, context) {\n    if (args.length < 4) return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n    if (args.length % 2 !== 0) return context.error(`Expected an odd number of arguments.`);\n    let outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n      outputType = context.expectedType;\n    }\n    const branches = [];\n    for (let i = 1; i < args.length - 1; i += 2) {\n      const test = context.parse(args[i], i, BooleanType);\n      if (!test) return null;\n      const result = context.parse(args[i + 1], i + 1, outputType);\n      if (!result) return null;\n      branches.push([test, result]);\n      outputType = outputType || result.type;\n    }\n    const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise) return null;\n    return new Case(outputType, branches, otherwise);\n  }\n  evaluate(ctx) {\n    for (const [test, expression] of this.branches) {\n      if (test.evaluate(ctx)) {\n        return expression.evaluate(ctx);\n      }\n    }\n    return this.otherwise.evaluate(ctx);\n  }\n  eachChild(fn) {\n    for (const [test, expression] of this.branches) {\n      fn(test);\n      fn(expression);\n    }\n    fn(this.otherwise);\n  }\n  outputDefined() {\n    return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n  }\n  serialize() {\n    const serialized = ['case'];\n    this.eachChild(child => {\n      serialized.push(child.serialize());\n    });\n    return serialized;\n  }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n  constructor(type, input, beginIndex, endIndex) {\n    this.type = type;\n    this.input = input;\n    this.beginIndex = beginIndex;\n    this.endIndex = endIndex;\n  }\n  static parse(args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n      return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n    }\n    const input = context.parse(args[1], 1, ValueType);\n    const beginIndex = context.parse(args[2], 2, NumberType);\n    if (!input || !beginIndex) return null;\n    if (!isValidType(input.type, [array$1(ValueType), StringType, ValueType])) {\n      return context.error(`Expected first argument to be of type array or string, but found ${toString$1(input.type)} instead`);\n    }\n    if (args.length === 4) {\n      const endIndex = context.parse(args[3], 3, NumberType);\n      if (!endIndex) return null;\n      return new Slice(input.type, input, beginIndex, endIndex);\n    } else {\n      return new Slice(input.type, input, beginIndex);\n    }\n  }\n  evaluate(ctx) {\n    const input = this.input.evaluate(ctx);\n    const beginIndex = this.beginIndex.evaluate(ctx);\n    if (!isValidNativeType(input, ['string', 'array'])) {\n      throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${toString$1(typeOf(input))} instead.`);\n    }\n    if (this.endIndex) {\n      const endIndex = this.endIndex.evaluate(ctx);\n      return input.slice(beginIndex, endIndex);\n    }\n    return input.slice(beginIndex);\n  }\n  eachChild(fn) {\n    fn(this.input);\n    fn(this.beginIndex);\n    if (this.endIndex) {\n      fn(this.endIndex);\n    }\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    if (this.endIndex != null && this.endIndex !== undefined) {\n      const endIndex = this.endIndex.serialize();\n      return ['slice', this.input.serialize(), this.beginIndex.serialize(), endIndex];\n    }\n    return ['slice', this.input.serialize(), this.beginIndex.serialize()];\n  }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n  if (op === '==' || op === '!=') {\n    // equality operator\n    return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n  } else {\n    // ordering operator\n    return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n  }\n}\nfunction eq(ctx, a, b) {\n  return a === b;\n}\nfunction neq(ctx, a, b) {\n  return a !== b;\n}\nfunction lt(ctx, a, b) {\n  return a < b;\n}\nfunction gt(ctx, a, b) {\n  return a > b;\n}\nfunction lteq(ctx, a, b) {\n  return a <= b;\n}\nfunction gteq(ctx, a, b) {\n  return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n  return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n  return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n  return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n  return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n  return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n  return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n  const isOrderComparison = op !== '==' && op !== '!=';\n  return class Comparison {\n    constructor(lhs, rhs, collator) {\n      this.type = BooleanType;\n      this.lhs = lhs;\n      this.rhs = rhs;\n      this.collator = collator;\n      this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n    }\n    static parse(args, context) {\n      if (args.length !== 3 && args.length !== 4) return context.error(`Expected two or three arguments.`);\n      const op = args[0];\n      let lhs = context.parse(args[1], 1, ValueType);\n      if (!lhs) return null;\n      if (!isComparableType(op, lhs.type)) {\n        return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString$1(lhs.type)}'.`);\n      }\n      let rhs = context.parse(args[2], 2, ValueType);\n      if (!rhs) return null;\n      if (!isComparableType(op, rhs.type)) {\n        return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString$1(rhs.type)}'.`);\n      }\n      if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n        return context.error(`Cannot compare types '${toString$1(lhs.type)}' and '${toString$1(rhs.type)}'.`);\n      }\n      if (isOrderComparison) {\n        // typing rules specific to less/greater than operators\n        if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n          // (value, T)\n          lhs = new Assertion$1(rhs.type, [lhs]);\n        } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n          // (T, value)\n          rhs = new Assertion$1(lhs.type, [rhs]);\n        }\n      }\n      let collator = null;\n      if (args.length === 4) {\n        if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n          return context.error(`Cannot use collator to compare non-string types.`);\n        }\n        collator = context.parse(args[3], 3, CollatorType);\n        if (!collator) return null;\n      }\n      return new Comparison(lhs, rhs, collator);\n    }\n    evaluate(ctx) {\n      const lhs = this.lhs.evaluate(ctx);\n      const rhs = this.rhs.evaluate(ctx);\n      if (isOrderComparison && this.hasUntypedArgument) {\n        const lt = typeOf(lhs);\n        const rt = typeOf(rhs);\n        // check that type is string or number, and equal\n        if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n          throw new RuntimeError$1(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n        }\n      }\n      if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n        const lt = typeOf(lhs);\n        const rt = typeOf(rhs);\n        if (lt.kind !== 'string' || rt.kind !== 'string') {\n          return compareBasic(ctx, lhs, rhs);\n        }\n      }\n      return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n    }\n    eachChild(fn) {\n      fn(this.lhs);\n      fn(this.rhs);\n      if (this.collator) {\n        fn(this.collator);\n      }\n    }\n    outputDefined() {\n      return true;\n    }\n    serialize() {\n      const serialized = [op];\n      this.eachChild(child => {\n        serialized.push(child.serialize());\n      });\n      return serialized;\n    }\n  };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n  // BCP 47 language tag\n  // ISO 4217 currency code, required if style=currency\n  // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n  // Default 0\n  // Default 3\n  constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n    this.type = StringType;\n    this.number = number;\n    this.locale = locale;\n    this.currency = currency;\n    this.unit = unit;\n    this.minFractionDigits = minFractionDigits;\n    this.maxFractionDigits = maxFractionDigits;\n  }\n  static parse(args, context) {\n    if (args.length !== 3) return context.error(`Expected two arguments.`);\n    const number = context.parse(args[1], 1, NumberType);\n    if (!number) return null;\n    const options = args[2];\n    if (typeof options !== 'object' || Array.isArray(options)) return context.error(`NumberFormat options argument must be an object.`);\n    let locale = null;\n    if (options['locale']) {\n      locale = context.parse(options['locale'], 1, StringType);\n      if (!locale) return null;\n    }\n    let currency = null;\n    if (options['currency']) {\n      currency = context.parse(options['currency'], 1, StringType);\n      if (!currency) return null;\n    }\n    let unit = null;\n    if (options['unit']) {\n      unit = context.parse(options['unit'], 1, StringType);\n      if (!unit) return null;\n    }\n    let minFractionDigits = null;\n    if (options['min-fraction-digits']) {\n      minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n      if (!minFractionDigits) return null;\n    }\n    let maxFractionDigits = null;\n    if (options['max-fraction-digits']) {\n      maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n      if (!maxFractionDigits) return null;\n    }\n    return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n  }\n  evaluate(ctx) {\n    return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n      style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n      currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n      unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n      minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n      maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n    }).format(this.number.evaluate(ctx));\n  }\n  eachChild(fn) {\n    fn(this.number);\n    if (this.locale) {\n      fn(this.locale);\n    }\n    if (this.currency) {\n      fn(this.currency);\n    }\n    if (this.unit) {\n      fn(this.unit);\n    }\n    if (this.minFractionDigits) {\n      fn(this.minFractionDigits);\n    }\n    if (this.maxFractionDigits) {\n      fn(this.maxFractionDigits);\n    }\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    const options = {};\n    if (this.locale) {\n      options['locale'] = this.locale.serialize();\n    }\n    if (this.currency) {\n      options['currency'] = this.currency.serialize();\n    }\n    if (this.unit) {\n      options['unit'] = this.unit.serialize();\n    }\n    if (this.minFractionDigits) {\n      options['min-fraction-digits'] = this.minFractionDigits.serialize();\n    }\n    if (this.maxFractionDigits) {\n      options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n    }\n    return ['number-format', this.number.serialize(), options];\n  }\n}\n\n//      \nclass Length {\n  constructor(input) {\n    this.type = NumberType;\n    this.input = input;\n  }\n  static parse(args, context) {\n    if (args.length !== 2) return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n    const input = context.parse(args[1], 1);\n    if (!input) return null;\n    if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value') return context.error(`Expected argument of type string or array, but found ${toString$1(input.type)} instead.`);\n    return new Length(input);\n  }\n  evaluate(ctx) {\n    const input = this.input.evaluate(ctx);\n    if (typeof input === 'string') {\n      return input.length;\n    } else if (Array.isArray(input)) {\n      return input.length;\n    } else {\n      throw new RuntimeError$1(`Expected value to be of type string or array, but found ${toString$1(typeOf(input))} instead.`);\n    }\n  }\n  eachChild(fn) {\n    fn(this.input);\n  }\n  outputDefined() {\n    return false;\n  }\n  serialize() {\n    const serialized = ['length'];\n    this.eachChild(child => {\n      serialized.push(child.serialize());\n    });\n    return serialized;\n  }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n  // special forms\n  '==': Equals,\n  '!=': NotEquals,\n  '>': GreaterThan,\n  '<': LessThan,\n  '>=': GreaterThanOrEqual,\n  '<=': LessThanOrEqual,\n  'array': Assertion$1,\n  'at': At$1,\n  'boolean': Assertion$1,\n  'case': Case$1,\n  'coalesce': Coalesce$1,\n  'collator': CollatorExpression,\n  'format': FormatExpression,\n  'image': ImageExpression,\n  'in': In$1,\n  'index-of': IndexOf$1,\n  'interpolate': Interpolate$1,\n  'interpolate-hcl': Interpolate$1,\n  'interpolate-lab': Interpolate$1,\n  'length': Length$1,\n  'let': Let$1,\n  'literal': Literal$1,\n  'match': Match$1,\n  'number': Assertion$1,\n  'number-format': NumberFormat,\n  'object': Assertion$1,\n  'slice': Slice$1,\n  'step': Step$1,\n  'string': Assertion$1,\n  'to-boolean': Coercion$1,\n  'to-color': Coercion$1,\n  'to-number': Coercion$1,\n  'to-string': Coercion$1,\n  'var': Var$1,\n  'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n  r = r.evaluate(ctx);\n  g = g.evaluate(ctx);\n  b = b.evaluate(ctx);\n  const alpha = a ? a.evaluate(ctx) : 1;\n  const error = validateRGBA(r, g, b, alpha);\n  if (error) throw new RuntimeError$1(error);\n  return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n  return key in obj;\n}\nfunction get(key, obj) {\n  const v = obj[key];\n  return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n  while (i <= j) {\n    const m = i + j >> 1;\n    if (a[m] === v) return true;\n    if (a[m] > v) j = m - 1;else i = m + 1;\n  }\n  return false;\n}\nfunction varargs(type) {\n  return {\n    type\n  };\n}\nCompoundExpression$1.register(expressions, {\n  'error': [ErrorType, [StringType], (ctx, [v]) => {\n    throw new RuntimeError$1(v.evaluate(ctx));\n  }],\n  'typeof': [StringType, [ValueType], (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))],\n  'to-rgba': [array$1(NumberType, 4), [ColorType], (ctx, [v]) => {\n    return v.evaluate(ctx).toArray();\n  }],\n  'rgb': [ColorType, [NumberType, NumberType, NumberType], rgba],\n  'rgba': [ColorType, [NumberType, NumberType, NumberType, NumberType], rgba],\n  'has': {\n    type: BooleanType,\n    overloads: [[[StringType], (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())], [[StringType, ObjectType], (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))]]\n  },\n  'get': {\n    type: ValueType,\n    overloads: [[[StringType], (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())], [[StringType, ObjectType], (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))]]\n  },\n  'feature-state': [ValueType, [StringType], (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})],\n  'properties': [ObjectType, [], ctx => ctx.properties()],\n  'geometry-type': [StringType, [], ctx => ctx.geometryType()],\n  'id': [ValueType, [], ctx => ctx.id()],\n  'zoom': [NumberType, [], ctx => ctx.globals.zoom],\n  'pitch': [NumberType, [], ctx => ctx.globals.pitch || 0],\n  'distance-from-center': [NumberType, [], ctx => ctx.distanceFromCenter()],\n  'heatmap-density': [NumberType, [], ctx => ctx.globals.heatmapDensity || 0],\n  'line-progress': [NumberType, [], ctx => ctx.globals.lineProgress || 0],\n  'sky-radial-progress': [NumberType, [], ctx => ctx.globals.skyRadialProgress || 0],\n  'accumulated': [ValueType, [], ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated],\n  '+': [NumberType, varargs(NumberType), (ctx, args) => {\n    let result = 0;\n    for (const arg of args) {\n      result += arg.evaluate(ctx);\n    }\n    return result;\n  }],\n  '*': [NumberType, varargs(NumberType), (ctx, args) => {\n    let result = 1;\n    for (const arg of args) {\n      result *= arg.evaluate(ctx);\n    }\n    return result;\n  }],\n  '-': {\n    type: NumberType,\n    overloads: [[[NumberType, NumberType], (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)], [[NumberType], (ctx, [a]) => -a.evaluate(ctx)]]\n  },\n  '/': [NumberType, [NumberType, NumberType], (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)],\n  '%': [NumberType, [NumberType, NumberType], (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)],\n  'ln2': [NumberType, [], () => Math.LN2],\n  'pi': [NumberType, [], () => Math.PI],\n  'e': [NumberType, [], () => Math.E],\n  '^': [NumberType, [NumberType, NumberType], (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))],\n  'sqrt': [NumberType, [NumberType], (ctx, [x]) => Math.sqrt(x.evaluate(ctx))],\n  'log10': [NumberType, [NumberType], (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10],\n  'ln': [NumberType, [NumberType], (ctx, [n]) => Math.log(n.evaluate(ctx))],\n  'log2': [NumberType, [NumberType], (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2],\n  'sin': [NumberType, [NumberType], (ctx, [n]) => Math.sin(n.evaluate(ctx))],\n  'cos': [NumberType, [NumberType], (ctx, [n]) => Math.cos(n.evaluate(ctx))],\n  'tan': [NumberType, [NumberType], (ctx, [n]) => Math.tan(n.evaluate(ctx))],\n  'asin': [NumberType, [NumberType], (ctx, [n]) => Math.asin(n.evaluate(ctx))],\n  'acos': [NumberType, [NumberType], (ctx, [n]) => Math.acos(n.evaluate(ctx))],\n  'atan': [NumberType, [NumberType], (ctx, [n]) => Math.atan(n.evaluate(ctx))],\n  'min': [NumberType, varargs(NumberType), (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))],\n  'max': [NumberType, varargs(NumberType), (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))],\n  'abs': [NumberType, [NumberType], (ctx, [n]) => Math.abs(n.evaluate(ctx))],\n  'round': [NumberType, [NumberType], (ctx, [n]) => {\n    const v = n.evaluate(ctx);\n    // Javascript's Math.round() rounds towards +Infinity for halfway\n    // values, even when they're negative. It's more common to round\n    // away from 0 (e.g., this is what python and C++ do)\n    return v < 0 ? -Math.round(-v) : Math.round(v);\n  }],\n  'floor': [NumberType, [NumberType], (ctx, [n]) => Math.floor(n.evaluate(ctx))],\n  'ceil': [NumberType, [NumberType], (ctx, [n]) => Math.ceil(n.evaluate(ctx))],\n  'filter-==': [BooleanType, [StringType, ValueType], (ctx, [k, v]) => ctx.properties()[k.value] === v.value],\n  'filter-id-==': [BooleanType, [ValueType], (ctx, [v]) => ctx.id() === v.value],\n  'filter-type-==': [BooleanType, [StringType], (ctx, [v]) => ctx.geometryType() === v.value],\n  'filter-<': [BooleanType, [StringType, ValueType], (ctx, [k, v]) => {\n    const a = ctx.properties()[k.value];\n    const b = v.value;\n    return typeof a === typeof b && a < b;\n  }],\n  'filter-id-<': [BooleanType, [ValueType], (ctx, [v]) => {\n    const a = ctx.id();\n    const b = v.value;\n    return typeof a === typeof b && a < b;\n  }],\n  'filter->': [BooleanType, [StringType, ValueType], (ctx, [k, v]) => {\n    const a = ctx.properties()[k.value];\n    const b = v.value;\n    return typeof a === typeof b && a > b;\n  }],\n  'filter-id->': [BooleanType, [ValueType], (ctx, [v]) => {\n    const a = ctx.id();\n    const b = v.value;\n    return typeof a === typeof b && a > b;\n  }],\n  'filter-<=': [BooleanType, [StringType, ValueType], (ctx, [k, v]) => {\n    const a = ctx.properties()[k.value];\n    const b = v.value;\n    return typeof a === typeof b && a <= b;\n  }],\n  'filter-id-<=': [BooleanType, [ValueType], (ctx, [v]) => {\n    const a = ctx.id();\n    const b = v.value;\n    return typeof a === typeof b && a <= b;\n  }],\n  'filter->=': [BooleanType, [StringType, ValueType], (ctx, [k, v]) => {\n    const a = ctx.properties()[k.value];\n    const b = v.value;\n    return typeof a === typeof b && a >= b;\n  }],\n  'filter-id->=': [BooleanType, [ValueType], (ctx, [v]) => {\n    const a = ctx.id();\n    const b = v.value;\n    return typeof a === typeof b && a >= b;\n  }],\n  'filter-has': [BooleanType, [ValueType], (ctx, [k]) => k.value in ctx.properties()],\n  'filter-has-id': [BooleanType, [], ctx => ctx.id() !== null && ctx.id() !== undefined],\n  'filter-type-in': [BooleanType, [array$1(StringType)], (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0],\n  'filter-id-in': [BooleanType, [array$1(ValueType)], (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0],\n  'filter-in-small': [BooleanType, [StringType, array$1(ValueType)],\n  // assumes v is an array literal\n  (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0],\n  'filter-in-large': [BooleanType, [StringType, array$1(ValueType)],\n  // assumes v is a array literal with values sorted in ascending order and of a single type\n  (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)],\n  'all': {\n    type: BooleanType,\n    overloads: [[[BooleanType, BooleanType], (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)], [varargs(BooleanType), (ctx, args) => {\n      for (const arg of args) {\n        if (!arg.evaluate(ctx)) return false;\n      }\n      return true;\n    }]]\n  },\n  'any': {\n    type: BooleanType,\n    overloads: [[[BooleanType, BooleanType], (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)], [varargs(BooleanType), (ctx, args) => {\n      for (const arg of args) {\n        if (arg.evaluate(ctx)) return true;\n      }\n      return false;\n    }]]\n  },\n  '!': [BooleanType, [BooleanType], (ctx, [b]) => !b.evaluate(ctx)],\n  'is-supported-script': [BooleanType, [StringType],\n  // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n  (ctx, [s]) => {\n    const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n    if (isSupportedScript) {\n      return isSupportedScript(s.evaluate(ctx));\n    }\n    return true;\n  }],\n  'upcase': [StringType, [StringType], (ctx, [s]) => s.evaluate(ctx).toUpperCase()],\n  'downcase': [StringType, [StringType], (ctx, [s]) => s.evaluate(ctx).toLowerCase()],\n  'concat': [StringType, varargs(ValueType), (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')],\n  'resolved-locale': [StringType, [CollatorType], (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n  return {\n    result: 'success',\n    value\n  };\n}\nfunction error(value) {\n  return {\n    result: 'error',\n    value\n  };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n  return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n  return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n  return !!spec.expression && spec.expression.interpolated;\n}\nfunction isFunction(value) {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\nclass StyleExpression {\n  constructor(expression, propertySpec) {\n    this.expression = expression;\n    this._warningHistory = {};\n    this._evaluator = new EvaluationContext$1();\n    this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n    this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n  }\n  evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature;\n    this._evaluator.featureState = featureState;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    return this.expression.evaluate(this._evaluator);\n  }\n  evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature || null;\n    this._evaluator.featureState = featureState || null;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection || null;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    try {\n      const val = this.expression.evaluate(this._evaluator);\n      // eslint-disable-next-line no-self-compare\n      if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n        return this._defaultValue;\n      }\n      if (this._enumValues && !(val in this._enumValues)) {\n        throw new RuntimeError$1(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n      }\n      return val;\n    } catch (e) {\n      if (!this._warningHistory[e.message]) {\n        this._warningHistory[e.message] = true;\n        if (typeof console !== 'undefined') {\n          console.warn(e.message);\n        }\n      }\n      return this._defaultValue;\n    }\n  }\n}\nfunction isExpression(expression) {\n  return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n  const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n  // For string-valued properties, coerce to string at the top level rather than asserting.\n  const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? {\n    typeAnnotation: 'coerce'\n  } : undefined);\n  if (!parsed) {\n    return error(parser.errors);\n  }\n  return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n  constructor(kind, expression) {\n    this.kind = kind;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n  }\n  evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n  }\n  evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n  }\n}\nclass ZoomDependentExpression {\n  constructor(kind, expression, zoomStops, interpolationType) {\n    this.kind = kind;\n    this.zoomStops = zoomStops;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n    this.interpolationType = interpolationType;\n  }\n  evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n  }\n  evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n  }\n  interpolationFactor(input, lower, upper) {\n    if (this.interpolationType) {\n      return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n    } else {\n      return 0;\n    }\n  }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n  expression = createExpression(expression, propertySpec);\n  if (expression.result === 'error') {\n    return expression;\n  }\n  const parsed = expression.value.expression;\n  const isFeatureConstant$1 = isFeatureConstant(parsed);\n  if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n    return error([new ParsingError$1('', 'data expressions not supported')]);\n  }\n  const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n  if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n    return error([new ParsingError$1('', 'zoom expressions not supported')]);\n  }\n  const zoomCurve = findZoomCurve(parsed);\n  if (!zoomCurve && !isZoomConstant) {\n    return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n  } else if (zoomCurve instanceof ParsingError$1) {\n    return error([zoomCurve]);\n  } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n    return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n  }\n  if (!zoomCurve) {\n    return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n  }\n  const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n  return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n  let result = null;\n  if (expression instanceof Let$1) {\n    result = findZoomCurve(expression.result);\n  } else if (expression instanceof Coalesce$1) {\n    for (const arg of expression.args) {\n      result = findZoomCurve(arg);\n      if (result) {\n        break;\n      }\n    }\n  } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n    result = expression;\n  }\n  if (result instanceof ParsingError$1) {\n    return result;\n  }\n  expression.eachChild(child => {\n    const childResult = findZoomCurve(child);\n    if (childResult instanceof ParsingError$1) {\n      result = childResult;\n    } else if (!result && childResult) {\n      result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n    } else if (result && childResult && result !== childResult) {\n      result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n    }\n  });\n  return result;\n}\nfunction getExpectedType(spec) {\n  const types = {\n    color: ColorType,\n    string: StringType,\n    number: NumberType,\n    enum: StringType,\n    boolean: BooleanType,\n    formatted: FormattedType,\n    resolvedImage: ResolvedImageType\n  };\n  if (spec.type === 'array') {\n    return array$1(types[spec.value] || ValueType, spec.length);\n  }\n  return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n  if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n    // Special case for heatmap-color: it uses the 'default:' to define a\n    // default color ramp, but createExpression expects a simple value to fall\n    // back to in case of runtime errors\n    return new Color$1(0, 0, 0, 0);\n  } else if (spec.type === 'color') {\n    return Color$1.parse(spec.default) || null;\n  } else if (spec.default === undefined) {\n    return null;\n  } else {\n    return spec.default;\n  }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n  if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n    return value.valueOf();\n  } else {\n    return value;\n  }\n}\nfunction deepUnbundle(value) {\n  if (Array.isArray(value)) {\n    return value.map(deepUnbundle);\n  } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n    const unbundledValue = {};\n    for (const key in value) {\n      unbundledValue[key] = deepUnbundle(value[key]);\n    }\n    return unbundledValue;\n  }\n  return unbundle(value);\n}\nvar spec = {\n  \"$version\": 8,\n  \"$root\": {\n    \"version\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": [8]\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"metadata\": {\n      \"type\": \"*\"\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"value\": \"number\"\n    },\n    \"zoom\": {\n      \"type\": \"number\"\n    },\n    \"bearing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\"\n    },\n    \"pitch\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"degrees\"\n    },\n    \"light\": {\n      \"type\": \"light\"\n    },\n    \"terrain\": {\n      \"type\": \"terrain\"\n    },\n    \"fog\": {\n      \"type\": \"fog\"\n    },\n    \"sources\": {\n      \"required\": true,\n      \"type\": \"sources\"\n    },\n    \"sprite\": {\n      \"type\": \"string\"\n    },\n    \"glyphs\": {\n      \"type\": \"string\"\n    },\n    \"transition\": {\n      \"type\": \"transition\"\n    },\n    \"projection\": {\n      \"type\": \"projection\"\n    },\n    \"layers\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"layer\"\n    }\n  },\n  \"sources\": {\n    \"*\": {\n      \"type\": \"source\"\n    }\n  },\n  \"source\": [\"source_vector\", \"source_raster\", \"source_raster_dem\", \"source_geojson\", \"source_video\", \"source_image\"],\n  \"source_vector\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"vector\": {}\n      }\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [-180, -85.051129, 180, 85.051129]\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {},\n        \"tms\": {}\n      },\n      \"default\": \"xyz\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22\n    },\n    \"attribution\": {\n      \"type\": \"string\"\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"*\": {\n      \"type\": \"*\"\n    }\n  },\n  \"source_raster\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster\": {}\n      }\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [-180, -85.051129, 180, 85.051129]\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\"\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {},\n        \"tms\": {}\n      },\n      \"default\": \"xyz\"\n    },\n    \"attribution\": {\n      \"type\": \"string\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"*\": {\n      \"type\": \"*\"\n    }\n  },\n  \"source_raster_dem\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster-dem\": {}\n      }\n    },\n    \"url\": {\n      \"type\": \"string\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [-180, -85.051129, 180, 85.051129]\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\"\n    },\n    \"attribution\": {\n      \"type\": \"string\"\n    },\n    \"encoding\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"terrarium\": {},\n        \"mapbox\": {}\n      },\n      \"default\": \"mapbox\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"*\": {\n      \"type\": \"*\"\n    }\n  },\n  \"source_geojson\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"geojson\": {}\n      }\n    },\n    \"data\": {\n      \"type\": \"*\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 18\n    },\n    \"attribution\": {\n      \"type\": \"string\"\n    },\n    \"buffer\": {\n      \"type\": \"number\",\n      \"default\": 128,\n      \"maximum\": 512,\n      \"minimum\": 0\n    },\n    \"filter\": {\n      \"type\": \"*\"\n    },\n    \"tolerance\": {\n      \"type\": \"number\",\n      \"default\": 0.375\n    },\n    \"cluster\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"clusterRadius\": {\n      \"type\": \"number\",\n      \"default\": 50,\n      \"minimum\": 0\n    },\n    \"clusterMaxZoom\": {\n      \"type\": \"number\"\n    },\n    \"clusterMinPoints\": {\n      \"type\": \"number\"\n    },\n    \"clusterProperties\": {\n      \"type\": \"*\"\n    },\n    \"lineMetrics\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"generateId\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\"\n    }\n  },\n  \"source_video\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"video\": {}\n      }\n    },\n    \"urls\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"string\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\"\n      }\n    }\n  },\n  \"source_image\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"image\": {}\n      }\n    },\n    \"url\": {\n      \"required\": true,\n      \"type\": \"string\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\"\n      }\n    }\n  },\n  \"layer\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"fill\": {},\n        \"line\": {},\n        \"symbol\": {},\n        \"circle\": {},\n        \"heatmap\": {},\n        \"fill-extrusion\": {},\n        \"raster\": {},\n        \"hillshade\": {},\n        \"background\": {},\n        \"sky\": {}\n      },\n      \"required\": true\n    },\n    \"metadata\": {\n      \"type\": \"*\"\n    },\n    \"source\": {\n      \"type\": \"string\"\n    },\n    \"source-layer\": {\n      \"type\": \"string\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24\n    },\n    \"filter\": {\n      \"type\": \"filter\"\n    },\n    \"layout\": {\n      \"type\": \"layout\"\n    },\n    \"paint\": {\n      \"type\": \"paint\"\n    }\n  },\n  \"layout\": [\"layout_fill\", \"layout_line\", \"layout_circle\", \"layout_heatmap\", \"layout_fill-extrusion\", \"layout_symbol\", \"layout_raster\", \"layout_hillshade\", \"layout_background\", \"layout_sky\"],\n  \"layout_background\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_sky\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill\": {\n    \"fill-sort-key\": {\n      \"type\": \"number\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_circle\": {\n    \"circle-sort-key\": {\n      \"type\": \"number\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_heatmap\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill-extrusion\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    },\n    \"fill-extrusion-edge-radius\": {\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_line\": {\n    \"line-cap\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"butt\": {},\n        \"round\": {},\n        \"square\": {}\n      },\n      \"default\": \"butt\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-join\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"bevel\": {},\n        \"round\": {},\n        \"miter\": {}\n      },\n      \"default\": \"miter\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-miter-limit\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"requires\": [{\n        \"line-join\": \"miter\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-round-limit\": {\n      \"type\": \"number\",\n      \"default\": 1.05,\n      \"requires\": [{\n        \"line-join\": \"round\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-sort-key\": {\n      \"type\": \"number\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_symbol\": {\n    \"symbol-placement\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"point\": {},\n        \"line\": {},\n        \"line-center\": {}\n      },\n      \"default\": \"point\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-spacing\": {\n      \"type\": \"number\",\n      \"default\": 250,\n      \"minimum\": 1,\n      \"units\": \"pixels\",\n      \"requires\": [{\n        \"symbol-placement\": \"line\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-avoid-edges\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-sort-key\": {\n      \"type\": \"number\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"symbol-z-order\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {},\n        \"viewport-y\": {},\n        \"source\": {}\n      },\n      \"default\": \"auto\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"icon-image\", \"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {},\n        \"auto\": {}\n      },\n      \"default\": \"auto\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-size\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"units\": \"factor of the original icon size\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-text-fit\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {},\n        \"width\": {},\n        \"height\": {},\n        \"both\": {}\n      },\n      \"default\": \"none\",\n      \"requires\": [\"icon-image\", \"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-text-fit-padding\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [0, 0, 0, 0],\n      \"units\": \"pixels\",\n      \"requires\": [\"icon-image\", \"text-field\", {\n        \"icon-text-fit\": [\"both\", \"width\", \"height\"]\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-image\": {\n      \"type\": \"resolvedImage\",\n      \"tokens\": true,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"icon-image\", {\n        \"icon-rotation-alignment\": \"map\"\n      }, {\n        \"symbol-placement\": [\"line\", \"line-center\"]\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {},\n        \"left\": {},\n        \"right\": {},\n        \"top\": {},\n        \"bottom\": {},\n        \"top-left\": {},\n        \"top-right\": {},\n        \"bottom-left\": {},\n        \"bottom-right\": {}\n      },\n      \"default\": \"center\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {},\n        \"auto\": {}\n      },\n      \"default\": \"auto\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {},\n        \"auto\": {}\n      },\n      \"default\": \"auto\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {},\n        \"auto\": {}\n      },\n      \"default\": \"auto\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-field\": {\n      \"type\": \"formatted\",\n      \"default\": \"\",\n      \"tokens\": true,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-font\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"default\": [\"Open Sans Regular\", \"Arial Unicode MS Regular\"],\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-size\": {\n      \"type\": \"number\",\n      \"default\": 16,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-width\": {\n      \"type\": \"number\",\n      \"default\": 10,\n      \"minimum\": 0,\n      \"units\": \"ems\",\n      \"requires\": [\"text-field\", {\n        \"symbol-placement\": [\"point\"]\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-line-height\": {\n      \"type\": \"number\",\n      \"default\": 1.2,\n      \"units\": \"ems\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-letter-spacing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"ems\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-justify\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {},\n        \"left\": {},\n        \"center\": {},\n        \"right\": {}\n      },\n      \"default\": \"center\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-radial-offset\": {\n      \"type\": \"number\",\n      \"units\": \"ems\",\n      \"default\": 0,\n      \"requires\": [\"text-field\"],\n      \"property-type\": \"data-driven\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      }\n    },\n    \"text-variable-anchor\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"center\": {},\n        \"left\": {},\n        \"right\": {},\n        \"top\": {},\n        \"bottom\": {},\n        \"top-left\": {},\n        \"top-right\": {},\n        \"bottom-left\": {},\n        \"bottom-right\": {}\n      },\n      \"requires\": [\"text-field\", {\n        \"symbol-placement\": [\"point\"]\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {},\n        \"left\": {},\n        \"right\": {},\n        \"top\": {},\n        \"bottom\": {},\n        \"top-left\": {},\n        \"top-right\": {},\n        \"bottom-left\": {},\n        \"bottom-right\": {}\n      },\n      \"default\": \"center\",\n      \"requires\": [\"text-field\", {\n        \"!\": \"text-variable-anchor\"\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-angle\": {\n      \"type\": \"number\",\n      \"default\": 45,\n      \"units\": \"degrees\",\n      \"requires\": [\"text-field\", {\n        \"symbol-placement\": [\"line\", \"line-center\"]\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-writing-mode\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"horizontal\": {},\n        \"vertical\": {}\n      },\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"requires\": [\"text-field\", {\n        \"text-rotation-alignment\": \"map\"\n      }, {\n        \"symbol-placement\": [\"line\", \"line-center\"]\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-transform\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {},\n        \"uppercase\": {},\n        \"lowercase\": {}\n      },\n      \"default\": \"none\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"units\": \"ems\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"requires\": [\"text-field\", {\n        \"!\": \"text-radial-offset\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"requires\": [\"text-field\", \"icon-image\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_raster\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_hillshade\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {},\n        \"none\": {}\n      },\n      \"default\": \"visible\",\n      \"property-type\": \"constant\"\n    }\n  },\n  \"filter\": {\n    \"type\": \"array\",\n    \"value\": \"*\"\n  },\n  \"filter_symbol\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\", \"pitch\", \"distance-from-center\"]\n    }\n  },\n  \"filter_fill\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_line\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_circle\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_fill-extrusion\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_heatmap\": {\n    \"type\": \"boolean\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_operator\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"==\": {},\n      \"!=\": {},\n      \">\": {},\n      \">=\": {},\n      \"<\": {},\n      \"<=\": {},\n      \"in\": {},\n      \"!in\": {},\n      \"all\": {},\n      \"any\": {},\n      \"none\": {},\n      \"has\": {},\n      \"!has\": {},\n      \"within\": {}\n    }\n  },\n  \"geometry_type\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"Point\": {},\n      \"LineString\": {},\n      \"Polygon\": {}\n    }\n  },\n  \"function\": {\n    \"expression\": {\n      \"type\": \"expression\"\n    },\n    \"stops\": {\n      \"type\": \"array\",\n      \"value\": \"function_stop\"\n    },\n    \"base\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0\n    },\n    \"property\": {\n      \"type\": \"string\",\n      \"default\": \"$zoom\"\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"identity\": {},\n        \"exponential\": {},\n        \"interval\": {},\n        \"categorical\": {}\n      },\n      \"default\": \"exponential\"\n    },\n    \"colorSpace\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"rgb\": {},\n        \"lab\": {},\n        \"hcl\": {}\n      },\n      \"default\": \"rgb\"\n    },\n    \"default\": {\n      \"type\": \"*\",\n      \"required\": false\n    }\n  },\n  \"function_stop\": {\n    \"type\": \"array\",\n    \"minimum\": 0,\n    \"maximum\": 24,\n    \"value\": [\"number\", \"color\"],\n    \"length\": 2\n  },\n  \"expression\": {\n    \"type\": \"array\",\n    \"value\": \"*\",\n    \"minimum\": 1\n  },\n  \"expression_name\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"let\": {\n        \"group\": \"Variable binding\"\n      },\n      \"var\": {\n        \"group\": \"Variable binding\"\n      },\n      \"literal\": {\n        \"group\": \"Types\"\n      },\n      \"array\": {\n        \"group\": \"Types\"\n      },\n      \"at\": {\n        \"group\": \"Lookup\"\n      },\n      \"in\": {\n        \"group\": \"Lookup\"\n      },\n      \"index-of\": {\n        \"group\": \"Lookup\"\n      },\n      \"slice\": {\n        \"group\": \"Lookup\"\n      },\n      \"case\": {\n        \"group\": \"Decision\"\n      },\n      \"match\": {\n        \"group\": \"Decision\"\n      },\n      \"coalesce\": {\n        \"group\": \"Decision\"\n      },\n      \"step\": {\n        \"group\": \"Ramps, scales, curves\"\n      },\n      \"interpolate\": {\n        \"group\": \"Ramps, scales, curves\"\n      },\n      \"interpolate-hcl\": {\n        \"group\": \"Ramps, scales, curves\"\n      },\n      \"interpolate-lab\": {\n        \"group\": \"Ramps, scales, curves\"\n      },\n      \"ln2\": {\n        \"group\": \"Math\"\n      },\n      \"pi\": {\n        \"group\": \"Math\"\n      },\n      \"e\": {\n        \"group\": \"Math\"\n      },\n      \"typeof\": {\n        \"group\": \"Types\"\n      },\n      \"string\": {\n        \"group\": \"Types\"\n      },\n      \"number\": {\n        \"group\": \"Types\"\n      },\n      \"boolean\": {\n        \"group\": \"Types\"\n      },\n      \"object\": {\n        \"group\": \"Types\"\n      },\n      \"collator\": {\n        \"group\": \"Types\"\n      },\n      \"format\": {\n        \"group\": \"Types\"\n      },\n      \"image\": {\n        \"group\": \"Types\"\n      },\n      \"number-format\": {\n        \"group\": \"Types\"\n      },\n      \"to-string\": {\n        \"group\": \"Types\"\n      },\n      \"to-number\": {\n        \"group\": \"Types\"\n      },\n      \"to-boolean\": {\n        \"group\": \"Types\"\n      },\n      \"to-rgba\": {\n        \"group\": \"Color\"\n      },\n      \"to-color\": {\n        \"group\": \"Types\"\n      },\n      \"rgb\": {\n        \"group\": \"Color\"\n      },\n      \"rgba\": {\n        \"group\": \"Color\"\n      },\n      \"get\": {\n        \"group\": \"Lookup\"\n      },\n      \"has\": {\n        \"group\": \"Lookup\"\n      },\n      \"length\": {\n        \"group\": \"Lookup\"\n      },\n      \"properties\": {\n        \"group\": \"Feature data\"\n      },\n      \"feature-state\": {\n        \"group\": \"Feature data\"\n      },\n      \"geometry-type\": {\n        \"group\": \"Feature data\"\n      },\n      \"id\": {\n        \"group\": \"Feature data\"\n      },\n      \"zoom\": {\n        \"group\": \"Camera\"\n      },\n      \"pitch\": {\n        \"group\": \"Camera\"\n      },\n      \"distance-from-center\": {\n        \"group\": \"Camera\"\n      },\n      \"heatmap-density\": {\n        \"group\": \"Heatmap\"\n      },\n      \"line-progress\": {\n        \"group\": \"Feature data\"\n      },\n      \"sky-radial-progress\": {\n        \"group\": \"sky\"\n      },\n      \"accumulated\": {\n        \"group\": \"Feature data\"\n      },\n      \"+\": {\n        \"group\": \"Math\"\n      },\n      \"*\": {\n        \"group\": \"Math\"\n      },\n      \"-\": {\n        \"group\": \"Math\"\n      },\n      \"/\": {\n        \"group\": \"Math\"\n      },\n      \"%\": {\n        \"group\": \"Math\"\n      },\n      \"^\": {\n        \"group\": \"Math\"\n      },\n      \"sqrt\": {\n        \"group\": \"Math\"\n      },\n      \"log10\": {\n        \"group\": \"Math\"\n      },\n      \"ln\": {\n        \"group\": \"Math\"\n      },\n      \"log2\": {\n        \"group\": \"Math\"\n      },\n      \"sin\": {\n        \"group\": \"Math\"\n      },\n      \"cos\": {\n        \"group\": \"Math\"\n      },\n      \"tan\": {\n        \"group\": \"Math\"\n      },\n      \"asin\": {\n        \"group\": \"Math\"\n      },\n      \"acos\": {\n        \"group\": \"Math\"\n      },\n      \"atan\": {\n        \"group\": \"Math\"\n      },\n      \"min\": {\n        \"group\": \"Math\"\n      },\n      \"max\": {\n        \"group\": \"Math\"\n      },\n      \"round\": {\n        \"group\": \"Math\"\n      },\n      \"abs\": {\n        \"group\": \"Math\"\n      },\n      \"ceil\": {\n        \"group\": \"Math\"\n      },\n      \"floor\": {\n        \"group\": \"Math\"\n      },\n      \"distance\": {\n        \"group\": \"Math\"\n      },\n      \"==\": {\n        \"group\": \"Decision\"\n      },\n      \"!=\": {\n        \"group\": \"Decision\"\n      },\n      \">\": {\n        \"group\": \"Decision\"\n      },\n      \"<\": {\n        \"group\": \"Decision\"\n      },\n      \">=\": {\n        \"group\": \"Decision\"\n      },\n      \"<=\": {\n        \"group\": \"Decision\"\n      },\n      \"all\": {\n        \"group\": \"Decision\"\n      },\n      \"any\": {\n        \"group\": \"Decision\"\n      },\n      \"!\": {\n        \"group\": \"Decision\"\n      },\n      \"within\": {\n        \"group\": \"Decision\"\n      },\n      \"is-supported-script\": {\n        \"group\": \"String\"\n      },\n      \"upcase\": {\n        \"group\": \"String\"\n      },\n      \"downcase\": {\n        \"group\": \"String\"\n      },\n      \"concat\": {\n        \"group\": \"String\"\n      },\n      \"resolved-locale\": {\n        \"group\": \"String\"\n      }\n    }\n  },\n  \"fog\": {\n    \"range\": {\n      \"type\": \"array\",\n      \"default\": [0.5, 10],\n      \"minimum\": -20,\n      \"maximum\": 20,\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"high-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#245cdf\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"space-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": [\"interpolate\", [\"linear\"], [\"zoom\"], 4, \"#010b19\", 7, \"#367ab9\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"horizon-blend\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": [\"interpolate\", [\"linear\"], [\"zoom\"], 4, 0.2, 7, 0.1],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"star-intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": [\"interpolate\", [\"linear\"], [\"zoom\"], 5, 0.35, 6, 0],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    }\n  },\n  \"light\": {\n    \"anchor\": {\n      \"type\": \"enum\",\n      \"default\": \"viewport\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"property-type\": \"data-constant\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      }\n    },\n    \"position\": {\n      \"type\": \"array\",\n      \"default\": [1.15, 210, 30],\n      \"length\": 3,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    }\n  },\n  \"projection\": {\n    \"name\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"albers\": {},\n        \"equalEarth\": {},\n        \"equirectangular\": {},\n        \"lambertConformalConic\": {},\n        \"mercator\": {},\n        \"naturalEarth\": {},\n        \"winkelTripel\": {},\n        \"globe\": {}\n      },\n      \"default\": \"mercator\",\n      \"required\": true\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-180, -90],\n      \"maximum\": [180, 90],\n      \"transition\": false,\n      \"requires\": [{\n        \"name\": [\"albers\", \"lambertConformalConic\"]\n      }]\n    },\n    \"parallels\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-90, -90],\n      \"maximum\": [90, 90],\n      \"transition\": false,\n      \"requires\": [{\n        \"name\": [\"albers\", \"lambertConformalConic\"]\n      }]\n    }\n  },\n  \"terrain\": {\n    \"source\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"exaggeration\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1000,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true,\n      \"requires\": [\"source\"]\n    }\n  },\n  \"paint\": [\"paint_fill\", \"paint_line\", \"paint_circle\", \"paint_heatmap\", \"paint_fill-extrusion\", \"paint_symbol\", \"paint_raster\", \"paint_hillshade\", \"paint_background\", \"paint_sky\"],\n  \"paint_fill\": {\n    \"fill-antialias\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [{\n        \"!\": \"fill-pattern\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-outline-color\": {\n      \"type\": \"color\",\n      \"transition\": true,\n      \"requires\": [{\n        \"!\": \"fill-pattern\"\n      }, {\n        \"fill-antialias\": true\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"fill-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_fill-extrusion\": {\n    \"fill-extrusion-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [{\n        \"!\": \"fill-extrusion-pattern\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"fill-extrusion-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-height\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-base\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"transition\": true,\n      \"requires\": [\"fill-extrusion-height\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-vertical-gradient\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-ambient-occlusion-intensity\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true\n    },\n    \"fill-extrusion-ambient-occlusion-radius\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 3,\n      \"minimum\": 0,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"transition\": true,\n      \"requires\": [\"fill-extrusion-edge-radius\"]\n    }\n  },\n  \"paint_line\": {\n    \"line-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [{\n        \"!\": \"line-pattern\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"line-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-width\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gap-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-offset\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-dasharray\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"line widths\",\n      \"requires\": [{\n        \"!\": \"line-pattern\"\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\", \"feature\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gradient\": {\n      \"type\": \"color\",\n      \"transition\": false,\n      \"requires\": [{\n        \"!\": \"line-pattern\"\n      }, {\n        \"source\": \"geojson\",\n        \"has\": {\n          \"lineMetrics\": true\n        }\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"line-progress\"]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"line-trim-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"minimum\": [0, 0],\n      \"maximum\": [1, 1],\n      \"transition\": false,\n      \"requires\": [{\n        \"source\": \"geojson\",\n        \"has\": {\n          \"lineMetrics\": true\n        }\n      }],\n      \"property-type\": \"constant\"\n    }\n  },\n  \"paint_circle\": {\n    \"circle-radius\": {\n      \"type\": \"number\",\n      \"default\": 5,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"circle-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-scale\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"viewport\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-stroke-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_heatmap\": {\n    \"heatmap-radius\": {\n      \"type\": \"number\",\n      \"default\": 30,\n      \"minimum\": 1,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-weight\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-intensity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"heatmap-color\": {\n      \"type\": \"color\",\n      \"default\": [\"interpolate\", [\"linear\"], [\"heatmap-density\"], 0, \"rgba(0, 0, 255, 0)\", 0.1, \"royalblue\", 0.3, \"cyan\", 0.5, \"lime\", 0.7, \"yellow\", 1, \"red\"],\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"heatmap-density\"]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"heatmap-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_symbol\": {\n    \"icon-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"icon-image\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"icon-image\", \"icon-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"overridable\": true,\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\", \"feature\", \"feature-state\"]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [0, 0],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"requires\": [\"text-field\"],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"map\",\n      \"requires\": [\"text-field\", \"text-translate\"],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_raster\": {\n    \"raster-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-hue-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"transition\": true,\n      \"units\": \"degrees\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-min\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-max\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-saturation\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-contrast\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-resampling\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"linear\": {},\n        \"nearest\": {}\n      },\n      \"default\": \"linear\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-fade-duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"milliseconds\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_hillshade\": {\n    \"hillshade-illumination-direction\": {\n      \"type\": \"number\",\n      \"default\": 335,\n      \"minimum\": 0,\n      \"maximum\": 359,\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-illumination-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {},\n        \"viewport\": {}\n      },\n      \"default\": \"viewport\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-exaggeration\": {\n      \"type\": \"number\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-shadow-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-highlight-color\": {\n      \"type\": \"color\",\n      \"default\": \"#FFFFFF\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-accent-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_background\": {\n    \"background-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [{\n        \"!\": \"background-pattern\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_sky\": {\n    \"sky-type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"gradient\": {},\n        \"atmosphere\": {}\n      },\n      \"default\": \"atmosphere\",\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"requires\": [{\n        \"sky-type\": \"atmosphere\"\n      }],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun-intensity\": {\n      \"type\": \"number\",\n      \"requires\": [{\n        \"sky-type\": \"atmosphere\"\n      }],\n      \"default\": 10,\n      \"minimum\": 0,\n      \"maximum\": 100,\n      \"transition\": false,\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-center\": {\n      \"type\": \"array\",\n      \"requires\": [{\n        \"sky-type\": \"gradient\"\n      }],\n      \"value\": \"number\",\n      \"default\": [0, 0],\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-radius\": {\n      \"type\": \"number\",\n      \"requires\": [{\n        \"sky-type\": \"gradient\"\n      }],\n      \"default\": 90,\n      \"minimum\": 0,\n      \"maximum\": 180,\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient\": {\n      \"type\": \"color\",\n      \"default\": [\"interpolate\", [\"linear\"], [\"sky-radial-progress\"], 0.8, \"#87ceeb\", 1, \"white\"],\n      \"transition\": false,\n      \"requires\": [{\n        \"sky-type\": \"gradient\"\n      }],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"sky-radial-progress\"]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"sky-atmosphere-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"transition\": false,\n      \"requires\": [{\n        \"sky-type\": \"atmosphere\"\n      }],\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"transition\": false,\n      \"requires\": [{\n        \"sky-type\": \"atmosphere\"\n      }],\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\"zoom\"]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"transition\": {\n    \"duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\"\n    },\n    \"delay\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\"\n    }\n  },\n  \"property-type\": {\n    \"data-driven\": {\n      \"type\": \"property-type\"\n    },\n    \"color-ramp\": {\n      \"type\": \"property-type\"\n    },\n    \"data-constant\": {\n      \"type\": \"property-type\"\n    },\n    \"constant\": {\n      \"type\": \"property-type\"\n    }\n  },\n  \"promoteId\": {\n    \"*\": {\n      \"type\": \"string\"\n    }\n  }\n};\n\n//      \nfunction isExpressionFilter(filter) {\n  if (filter === true || filter === false) {\n    return true;\n  }\n  if (!Array.isArray(filter) || filter.length === 0) {\n    return false;\n  }\n  switch (filter[0]) {\n    case 'has':\n      return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n      return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n      return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n      return filter.length !== 3 || Array.isArray(filter[1]) || Array.isArray(filter[2]);\n    case 'any':\n    case 'all':\n      for (const f of filter.slice(1)) {\n        if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return true;\n  }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n  if (filter === null || filter === undefined) {\n    return {\n      filter: () => true,\n      needGeometry: false,\n      needFeature: false\n    };\n  }\n  if (!isExpressionFilter(filter)) {\n    filter = convertFilter(filter);\n  }\n  const filterExp = filter;\n  let staticFilter = true;\n  try {\n    staticFilter = extractStaticFilter(filterExp);\n  } catch (e) {\n    console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n  }\n  // Compile the static component of the filter\n  const filterSpec = spec[`filter_${layerType}`];\n  const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n  let filterFunc = null;\n  if (compiledStaticFilter.result === 'error') {\n    throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n  } else {\n    filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n  }\n  // If the static component is not equal to the entire filter then we have a dynamic component\n  // Compile the dynamic component separately\n  let dynamicFilterFunc = null;\n  let needFeature = null;\n  if (staticFilter !== filterExp) {\n    const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n    if (compiledDynamicFilter.result === 'error') {\n      throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n      dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n      needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n    }\n  }\n  filterFunc = filterFunc;\n  const needGeometry = geometryNeeded(staticFilter);\n  return {\n    filter: filterFunc,\n    dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n    needGeometry,\n    needFeature: !!needFeature\n  };\n}\nfunction extractStaticFilter(filter) {\n  if (!isDynamicFilter(filter)) {\n    return filter;\n  }\n  // Shallow copy so we can replace expressions in-place\n  let result = deepUnbundle(filter);\n  // 1. Union branches\n  unionDynamicBranches(result);\n  // 2. Collapse dynamic conditions to  `true`\n  result = collapseDynamicBooleanExpressions(result);\n  return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n  if (!Array.isArray(expression)) {\n    return expression;\n  }\n  const collapsed = collapsedExpression(expression);\n  if (collapsed === true) {\n    return collapsed;\n  } else {\n    return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n  }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n  let isBranchingDynamically = false;\n  const branches = [];\n  if (filter[0] === 'case') {\n    for (let i = 1; i < filter.length - 1; i += 2) {\n      isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n      branches.push(filter[i + 1]);\n    }\n    branches.push(filter[filter.length - 1]);\n  } else if (filter[0] === 'match') {\n    isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n    for (let i = 2; i < filter.length - 1; i += 2) {\n      branches.push(filter[i + 1]);\n    }\n    branches.push(filter[filter.length - 1]);\n  } else if (filter[0] === 'step') {\n    isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n    for (let i = 1; i < filter.length - 1; i += 2) {\n      branches.push(filter[i + 1]);\n    }\n  }\n  if (isBranchingDynamically) {\n    filter.length = 0;\n    filter.push('any', ...branches);\n  }\n  // traverse and recurse into children\n  for (let i = 1; i < filter.length; i++) {\n    unionDynamicBranches(filter[i]);\n  }\n}\nfunction isDynamicFilter(filter) {\n  // Base Cases\n  if (!Array.isArray(filter)) {\n    return false;\n  }\n  if (isRootExpressionDynamic(filter[0])) {\n    return true;\n  }\n  for (let i = 1; i < filter.length; i++) {\n    const child = filter[i];\n    if (isDynamicFilter(child)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isRootExpressionDynamic(expression) {\n  return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set(['in', '==', '!=', '>', '>=', '<', '<=', 'to-boolean']);\nfunction collapsedExpression(expression) {\n  if (dynamicConditionExpressions.has(expression[0])) {\n    for (let i = 1; i < expression.length; i++) {\n      const param = expression[i];\n      if (isDynamicFilter(param)) {\n        return true;\n      }\n    }\n  }\n  return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n  if (!Array.isArray(filter)) return false;\n  if (filter[0] === 'within') return true;\n  for (let index = 1; index < filter.length; index++) {\n    if (geometryNeeded(filter[index])) return true;\n  }\n  return false;\n}\nfunction convertFilter(filter) {\n  if (!filter) return true;\n  const op = filter[0];\n  if (filter.length <= 1) return op !== 'any';\n  const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n  return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n  switch (property) {\n    case '$type':\n      return [`filter-type-${op}`, value];\n    case '$id':\n      return [`filter-id-${op}`, value];\n    default:\n      return [`filter-${op}`, property, value];\n  }\n}\nfunction convertDisjunctionOp(filters) {\n  return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n  if (values.length === 0) {\n    return false;\n  }\n  switch (property) {\n    case '$type':\n      return [`filter-type-in`, ['literal', values]];\n    case '$id':\n      return [`filter-id-in`, ['literal', values]];\n    default:\n      if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n        return ['filter-in-large', property, ['literal', values.sort(compare)]];\n      } else {\n        return ['filter-in-small', property, ['literal', values]];\n      }\n  }\n}\nfunction convertHasOp(property) {\n  switch (property) {\n    case '$type':\n      return true;\n    case '$id':\n      return [`filter-has-id`];\n    default:\n      return [`filter-has`, property];\n  }\n}\nfunction convertNegation(filter) {\n  return ['!', filter];\n}\n\n//      \nvar refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n//      \nfunction deref(layer, parent) {\n  const result = {};\n  for (const k in layer) {\n    if (k !== 'ref') {\n      result[k] = layer[k];\n    }\n  }\n  refProperties.forEach(k => {\n    if (k in parent) {\n      result[k] = parent[k];\n    }\n  });\n  return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n  layers = layers.slice();\n  const map = Object.create(null);\n  for (let i = 0; i < layers.length; i++) {\n    map[layers[i].id] = layers[i];\n  }\n  for (let i = 0; i < layers.length; i++) {\n    if ('ref' in layers[i]) {\n      layers[i] = deref(layers[i], map[layers[i].ref]);\n    }\n  }\n  return layers;\n}\nvar fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [`https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`];\n  }\n  return mapboxSubdomains.map(sub => `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`);\n}\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\nfunction clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\nfunction deg2rad(degrees) {\n  return degrees * Math.PI / 180;\n}\nconst defaultResolutions = function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n}();\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n    // eslint-disable-line\n    return new OffscreenCanvas(width, height);\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\nfunction getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest ? options.transformRequest(url, resourceType) || url : url;\n  const pendingRequest = toPromise(() => transformedRequest).then(transformedRequest => {\n    if (!(transformedRequest instanceof Request)) {\n      transformedRequest = new Request(transformedRequest);\n    }\n    if (!transformedRequest.headers.get('Accept')) {\n      transformedRequest.headers.set('Accept', 'application/json');\n    }\n    if (metadata) {\n      metadata.request = transformedRequest;\n    }\n    return fetch(transformedRequest).then(function (response) {\n      delete pendingRequests[url];\n      return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n    }).catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  });\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest ? options.transformRequest(src, 'Tiles') || src : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            toPromise(() => transformedRequest).then(transformedRequest => {\n              fetch(transformedRequest).then(response => response.arrayBuffer()).then(data => {\n                const format = tile.getFormat();\n                const features = format.readFeatures(data, {\n                  extent: extent,\n                  featureProjection: projection\n                });\n                // @ts-ignore\n                tile.setFeatures(features);\n              }).catch(e => tile.setState(TileState.ERROR));\n            });\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest).then(transformedRequest => {\n            if (transformedRequest instanceof Request) {\n              fetch(transformedRequest).then(response => response.blob()).then(blob => {\n                const url = URL.createObjectURL(blob);\n                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                img.src = url;\n              }).catch(e => tile.setState(TileState.ERROR));\n            } else {\n              img.src = transformedRequest;\n            }\n          });\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl\n          }),\n          tileLoadFunction\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource('Source', normalizedSourceUrl[0], options, metadata).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url)[0];\n          });\n          return Promise.resolve({\n            tileJson,\n            tileLoadFunction\n          });\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href)[0];\n        })\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction\n      });\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n  const imgSize = [2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width, 2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${haloColor.b * 255},${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n      const buffer = 0.75;\n      const gamma = 0.1;\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n} /**\n  * @typedef {import(\"./apply.js\").Options} Options\n  * @private\n  */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n  return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = styleSheets[i];\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {}\n    }\n  }\n  return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([parts.slice(3).join(' ').replace(/\"/g, ''), parts[1], parts[0]]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (checkedFonts.get(`${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`) !== 100) {\n        const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n  if (compiledExpression.result === 'error') {\n    throw new Error(compiledExpression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n  }\n  return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = {\n  zoom: 0\n};\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color$1.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n  const allowOverlap = getValue(layer, 'layout', `${prefix}-allow-overlap`, zoom, feature, functionCache);\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(layer, 'layout', `${prefix}-ignore-placement`, zoom, feature, functionCache);\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n  }\n  return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n  recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      let blobUrl;\n      toPromise(() => spriteImageUrl).then(spriteImageUrl => {\n        if (spriteImageUrl instanceof Request) {\n          fetch(spriteImageUrl).then(response => response.blob()).then(blob => {\n            blobUrl = URL.createObjectURL(blob);\n            img.src = blobUrl;\n          }).catch(() => {});\n        } else {\n          img.crossOrigin = 'anonymous';\n          img.src = spriteImageUrl;\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        }\n      });\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n      //eslint-disable-line\n      const worker = self;\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n  const allLayers = derefLayers(glStyle.layers);\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(`Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`);\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(`Layer \"${layerId}\" does not use source \"${mapboxSource}`);\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n  const styles = [];\n  /**\n  * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n  * @param {number} resolution Resolution.\n  * @param {string} [onlyLayer] Calculate style for this layer only.\n  * @return {Array<import(\"ol/style/Style\").default>} Style.\n  */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n      const layout = layer.layout || emptyObj$1;\n      const paint = layer.paint || emptyObj$1;\n      if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n          opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n            if (fillIcon) {\n              const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                  style = new Style({\n                    fill: new Fill()\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                  const ctx = canvas.getContext('2d');\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState));\n          } else {\n            color = undefined;\n          }\n          const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n              style = new Style({\n                stroke: new Stroke()\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n            stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n            stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n              return x * width;\n            }) : null);\n            style.setZIndex(index);\n          }\n        }\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n          if (iconImage) {\n            icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n              const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n              if (type == 2) {\n                const geom = feature.getGeometry();\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], 2, {}, undefined);\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    if (placement === 'line' && iconRotationAlignment === 'map') {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct = (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (Math.abs(dotProduct) < 0.001 &&\n                        //midpoint is aligned with the segment\n                        xM <= maxX && xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                  const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(layer, zoom, f, 'icon', functionCache);\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor ? [iconColor.r * 255, iconColor.g * 255, iconColor.b * 255, iconColor.a] : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [imageElement.width, imageElement.height];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor || [0, 0, 0, 1]), {\n                            x: 0,\n                            y: 0,\n                            width: spriteImageData.width,\n                            height: spriteImageData.height,\n                            pixelRatio: spriteImageData.pixelRatio\n                          }, haloWidth, haloColor);\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(spriteImage, {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageSize[0],\n                              height: spriteImageSize[1]\n                            }, {\n                              r: 1,\n                              g: 1,\n                              b: 1,\n                              a: 1\n                            });\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImageSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                  iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                  iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n          const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n          const circleTranslate = getValue(layer, 'paint', 'circle-translate', zoom, f, functionCache, featureState);\n          const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n          const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n          const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth + '.' + circleTranslate[0] + '.' + circleTranslate[1];\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                width: circleStrokeWidth,\n                color: circleStrokeColor\n              }) : undefined,\n              fill: circleColor ? new Fill({\n                color: circleColor\n              }) : undefined,\n              declutterMode: 'none'\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n          const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n          textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n          font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n          maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n          const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(layer, zoom, f, 'text', functionCache);\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (!text || 'getDeclutterMode' in text && text.getDeclutterMode() !== declutterMode) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(layer, 'layout', 'text-transform', zoom, f, functionCache, featureState);\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(layer, 'layout', 'text-keep-upright', zoom, f, functionCache, featureState);\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n          const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n          const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n          const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n          text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n          textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = Math.PI * data.sunEl / 180;\n  const sunAz = Math.PI * data.sunAz / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n  let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n      dzdx = (z1 - z0) / dp;\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n      dzdy = (z1 - z0) / dp;\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n      /*\n      * The following is heavily inspired\n      * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n      */\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255\n      };\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n      };\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n    }\n  }\n  return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent() ? createXYZ({\n    extent: projection.getExtent(),\n    tileSize: tileSize,\n    maxZoom: 22\n  }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options).then(function (glStyle) {\n      if (glStyle.version != 8) {\n        return reject(new Error('glStyle version 8 required.'));\n      }\n      if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n        return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n      }\n      const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n      if (!sourceOrLayers) {\n        sourceId = Object.keys(glStyle.sources).find(function (key) {\n          return glStyle.sources[key].type === type;\n        });\n        sourceOrLayers = sourceId;\n      } else if (Array.isArray(sourceOrLayers)) {\n        sourceId = glStyle.layers.find(function (layer) {\n          return layer.id === sourceOrLayers[0];\n        }).source;\n      } else {\n        sourceId = sourceOrLayers;\n      }\n      if (!sourceId) {\n        return reject(new Error(`No ${type} source found in the glStyle.`));\n      }\n      function assignSource() {\n        if (!updateSource) {\n          return Promise.resolve();\n        }\n        if (layer instanceof VectorTileLayer) {\n          return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n            const targetSource = layer.getSource();\n            if (!targetSource) {\n              layer.setSource(source);\n            } else if (source !== targetSource) {\n              targetSource.setTileUrlFunction(source.getTileUrlFunction());\n              if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                // to get correct keys for tile cache and queue\n                targetSource.setUrls(source.getUrls());\n              }\n              //@ts-ignore\n              if (!targetSource.format_) {\n                //@ts-ignore\n                targetSource.format_ = source.format_;\n              }\n              if (!targetSource.getAttributions()) {\n                targetSource.setAttributions(source.getAttributions());\n              }\n              if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n              }\n              if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                targetSource.tileGrid = source.getTileGrid();\n              }\n            }\n            const tileGrid = layer.getSource().getTileGrid();\n            if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom()) && tileGrid.getMinZoom() > 0) {\n              layer.setMaxResolution(getResolutionForZoom(Math.max(0, tileGrid.getMinZoom() - 1e-12), tileGrid.getResolutions()));\n            }\n          });\n        }\n        const glSource = glStyle.sources[sourceId];\n        let source = layer.getSource();\n        if (!source || source.get('mapbox-source') !== glSource) {\n          source = setupGeoJSONSource(glSource, styleUrl, options);\n        }\n        const targetSource = layer.getSource();\n        if (!targetSource) {\n          layer.setSource(source);\n        } else if (source !== targetSource) {\n          if (!targetSource.getAttributions()) {\n            targetSource.setAttributions(source.getAttributions());\n          }\n          //@ts-ignore\n          if (!targetSource.format_) {\n            //@ts-ignore\n            targetSource.format_ = source.getFormat();\n          }\n          //@ts-ignore\n          targetSource.url_ = source.getUrl();\n        }\n        return Promise.resolve();\n      }\n      let spriteScale, spriteData, spriteImageUrl, style;\n      function onChange() {\n        if (!style && (!glStyle.sprite || spriteData)) {\n          if (options.projection && !resolutions) {\n            const projection = get$1(options.projection);\n            const units = projection.getUnits();\n            if (units !== 'm') {\n              resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n            }\n          }\n          style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, (fonts, templateUrl = options.webfonts) => getFonts(fonts, templateUrl), options.getImage);\n          if (!layer.getStyle()) {\n            reject(new Error(`Nothing to show for source [${sourceId}]`));\n          } else {\n            assignSource().then(resolve).catch(reject);\n          }\n        } else if (style) {\n          layer.setStyle(style);\n          assignSource().then(resolve).catch(reject);\n        } else {\n          reject(new Error('Something went wrong trying to apply style.'));\n        }\n      }\n      if (glStyle.sprite) {\n        const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n        spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n        const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n        let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n        new Promise(function (resolve, reject) {\n          fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n            spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n            fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n          });\n        }).then(function (spritesJson) {\n          if (spritesJson === undefined) {\n            reject(new Error('No sprites found.'));\n          }\n          spriteData = spritesJson;\n          spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n          if (options.transformRequest) {\n            const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage') || spriteImageUrl;\n            if (transformed instanceof Request || transformed instanceof Promise) {\n              spriteImageUrl = transformed;\n            }\n          }\n          onChange();\n        }).catch(function (err) {\n          reject(new Error(`Sprites cannot be loaded: ${spriteUrl}: ${err.message}`));\n        });\n      } else {\n        onChange();\n      }\n    }).catch(reject);\n  });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = get$1(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n      tileSize: tileGrid.getTileSize(0)\n    })\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n  let opacity;\n  const bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n  }\n  return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n      div.style.backgroundColor = color;\n      return div;\n    }\n  });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options).then(function ({\n      tileJson,\n      tileLoadFunction\n    }) {\n      const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJson, options);\n      sourceOptions.tileLoadFunction = tileLoadFunction;\n      sourceOptions.format = new MVT();\n      resolve(new VectorTileSource(sourceOptions));\n    }).catch(reject);\n  });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false\n  });\n  setupVectorSource(glSource, styleUrl, options).then(function (source) {\n    source.set('mapbox-source', glSource);\n    layer.setSource(source);\n  }).catch(function (error) {\n    layer.setSource(undefined);\n  });\n  return layer;\n}\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options).then(function ({\n      tileJson,\n      tileLoadFunction\n    }) {\n      const source = new TileJSON({\n        interpolate: options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = get$1(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      if (tileLoadFunction) {\n        source.setTileLoadFunction(tileLoadFunction);\n      }\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      resolve(source);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options).then(function (source) {\n    layer.setSource(source);\n  }).catch(function () {\n    layer.setSource(undefined);\n  });\n  return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer]\n    })\n  });\n  return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection ? new GeoJSON({\n    dataProjection: options.projection\n  }) : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url = typeof extentUrl === 'function' ? extentUrl(extent, resolution, projection) : extentUrl;\n          fetchResource('GeoJSON', url, options).then(json => {\n            const features = source.getFormat().readFeatures(json, {\n              featureProjection: projection\n            });\n            source.addFeatures(features);\n            success(features);\n          }).catch(response => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n        },\n        strategy: bbox\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options).then(json => {\n          const features = source.getFormat().readFeatures(json, {\n            featureProjection: projection\n          });\n          source.addFeatures(features);\n          success(features);\n        }).catch(response => {\n          source.removeLoadedExtent(extent);\n          failure();\n        });\n      }\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857'\n  });\n  const source = new VectorSource(Object.assign({\n    attributions: glSource.attribution,\n    format: geoJsonFormat\n  }, sourceOptions));\n  source.set('mapbox-source', glSource);\n  return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false\n  });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n  layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers.filter(function (mapboxLayer) {\n      return layerMapboxLayerids.includes(mapboxLayer.id);\n    }).some(function (mapboxLayer) {\n      return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n    });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(options.projection || 'EPSG:3857', event.resolution, getCenter(event.extent), 'm');\n      const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n      data.encoding = glSource.encoding;\n      data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n      data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n      data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n      data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n    });\n    layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection ? get$1(options.projection) : view.getProjection();\n      view = new View(Object.assign(view.getProperties(), {\n        maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n        projection: options.projection || view.getProjection()\n      }));\n      mapOrGroup.setView(view);\n    }\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize()\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {\n    styleUrl,\n    options\n  });\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n          layerIds = [];\n        }\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n  return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options).then(function (glStyle) {\n        processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n          resolve(mapOrGroup);\n        }).catch(reject);\n      }).catch(function (err) {\n        reject(new Error(`Could not load ${style}: ${err.message}`));\n      });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n        resolve(mapOrGroup);\n      }).catch(reject);\n    });\n  }\n  return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n        source.getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(Math.min(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions), getResolutionForZoom(Math.max(0, sourceMinZoom - 1e-12), tileGrid.getResolutions())));\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(getResolutionForZoom(maxZoom, defaultResolutions));\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions));\n        }\n      }\n      if (source instanceof VectorSource || source instanceof VectorTileSource) {\n        applyStyle(layer, glStyle, layerIds, Object.assign({\n          styleUrl: styleUrl\n        }, options)).then(function () {\n          manageVisibility(layer, mapOrGroup);\n          resolve();\n        }).catch(reject);\n      } else {\n        resolve();\n      }\n    };\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {\n      options,\n      styleUrl\n    } = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n  }\n  if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error('Updated layer and previous version must use the same source.');\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n  if (args) {\n    stylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nfunction updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = mapOrGroup.getLayers().getArray().filter(function (layer) {\n    return (layer instanceof VectorLayer || layer instanceof TileLayer || layer instanceof VectorTileLayer) && layer.getSource() === currentSource;\n  });\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(mapboxSource, metadata.styleUrl, metadata.options);\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options));\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(mapboxSource, metadata.styleUrl, metadata.options);\n      break;\n    default:\n      return Promise.reject(new Error('Unsupported source type ' + mapboxSource.type));\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n    }\n    stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return layers[i];\n    }\n  }\n  return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(layers[i]);\n    }\n  }\n  return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */\n    layers[i].getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n  const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n  const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n  * @param {Error} error error object.\n  */\n  constructor(error) {\n    super(EventType.ERROR);\n    /**\n    * @type {Error}\n    */\n    this.error = error;\n  }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n  /**\n  * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n  * must be provided.\n  */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT()\n    });\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties\n    });\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [applyStyle(this, url, options.layers || options.source, {\n      accessToken: this.accessToken\n    })];\n    if (this.getBackground() === undefined) {\n      promises.push(applyBackground(this, options.styleUrl, {\n        accessToken: this.accessToken\n      }));\n    }\n    Promise.all(promises).then(() => {\n      source.setState('ready');\n    }).catch(error => {\n      this.dispatchEvent(new ErrorEvent(error));\n      const source = this.getSource();\n      source.setState('error');\n    });\n  }\n}\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer, updateMapboxSource };\n"],
  "mappings": "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",
  "names": ["rgba", "get", "type", "error", "definitions", "bbox", "t0", "t1", "t2", "array", "op", "lt", "number", "spec", "types", "transformedRequest", "url", "color", "line", "getFonts", "spriteImageUrl", "icon", "i", "ii", "text", "pixel", "encoding", "glStyle", "VectorTile_default", "layer", "source", "targetSource", "resolve", "reject", "Vector_default", "success"]
}
